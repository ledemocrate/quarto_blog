[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Société Alsacienne d'Artisanat de la Data",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nAnalyse de données - TidyTuesday\n\n\n\n\n\n\ntidytuesday\n\n\ntidyverse\n\n\n\nSummer Movies\n\n\n\n\n\nOct 20, 2024\n\n\n4 min\n\n\n\n\n\n\n\nDe la notion de graphe inter-vote à la notion de représentativité\n\n\n\n\n\n\nthéorie des graphes\n\n\nréseau\n\n\nvote\n\n\nassemblée nationale\n\n\n\nApplication à l’Assemblée Nationale\n\n\n\n\n\nOct 20, 2024\n\n\n16 min\n\n\n\n\n\n\n\nDe l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale\n\n\nFormation DATA\n\n\nApplication sur l’Open Data de l’Assemblée Nationale\n\n\n\n\n\nOct 20, 2024\n\n\n1 min\n\n\n\n\n\n\n\nDe l’explication du prix d’une escort\n\n\n\n\n\n\nkaggle\n\n\nstatistique\n\n\nessai\n\n\n\nAnalyse du prix d’une escort à Moscou\n\n\n\n\n\nOct 20, 2024\n\n\n1 min\n\n\n\n\n\n\n\nDe l’utilisation d’Apache dans Docker avec Windows\n\n\nCréation d’une route POST_VOTE\n\n\n\nApache Camel\n\n\nApache Kafka\n\n\nApache ActiveMQ\n\n\nApache Karaf\n\n\nDocker\n\n\nTalend\n\n\nDebian\n\n\n\n\n\n\n\n\n\nOct 8, 2024\n\n\n12 min\n\n\n\n\n\n\n\nDe la données non structurées en base de données structurées\n\n\nApplication aux données géographiques\n\n\n\ndata science\n\n\nR\n\n\npython\n\n\ngeojson\n\n\npostgresql\n\n\ntidydata\n\n\n\n\n\n\n\n\n\nMar 31, 2024\n\n\n5 min\n\n\n\n\n\n\n\nDe la démocratie théorique à la démocratie empirique\n\n\n\n\n\n\ndemocratie participitative\n\n\nstatistique\n\n\nessai\n\n\n\nIndice de mesure démocratique\n\n\n\n\n\nMar 31, 2024\n\n\n4 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/graphe_inter_vote/graphe_inter_vote.html",
    "href": "posts/graphe_inter_vote/graphe_inter_vote.html",
    "title": "De la notion de graphe inter-vote à la notion de représentativité",
    "section": "",
    "text": "L’Assemblée nationale se situe au cœur de notre démocratie.\nElle est née en 1789 lorsque les députés du tiers-Etat ont juré de ne pas se séparer tant que ne serait pas établie une Constitution. Les députés sont élus pour représenter la Nation tout entière et le peuple français. Ils ont pour mission de voter les lois, de contrôler l’action du Gouvernement et d’évaluer les politiques publiques.\nLes députés qui siègent à l’Assemblée nationale sont élus au scrutin majoritaire uninominal à deux tours dans le cadre de circonscriptions plus ou moins équivalentes à 100 000 habitants, pour cinq ans, sauf dissolution de l’Assemblée. La loi électorale de 1986 précise que les écarts de population entre circonscriptions ne doivent en aucun cas aboutir à ce qu’une circonscription dépasse de plus de 20 % la population moyenne des circonscriptions du département. Mais il existe des inégalités entre les circonscriptions rurales moins peuplées et les circonscriptions urbaines. À titre d’exemple, le député de la circonscription la plus peuplée du Val-d’Oise représente 188 000 électeurs quand celui de la circonscription la moins peuplée de Lozère n’en représente que 34 0003. Chaque candidat se présente avec un suppléant qui prend sa place en cas d’incompatibilité de fonction, quand le député devient ministre par exemple.\nUn texte de loi peut avoir pour origine le Premier ministre (le texte est alors un « projet de loi ») ou un membre du Parlement (« proposition de loi »).\nCertaines lois sont obligatoirement d’origine gouvernementale, comme les lois de finances. Les projets de loi peuvent être soumis en premier à l’Assemblée nationale ou au Sénat, sauf dans le cas des lois de finances qui passent d’abord par l’Assemblée nationale, et des lois ayant pour principal objet l’organisation des collectivités territoriales ou les instances représentatives des Français établis hors de France qui sont soumis en premier lieu au Sénat.\nEn tant que chambre du Parlement, l’Assemblée nationale contrôle la politique du gouvernement. Elle a plus de pouvoir en ce domaine que le Sénat, à travers les procédures de vote de confiance, de motion de censure, et d’engagement de responsabilité du gouvernement sur un texte.\nConcrètement cela signifie que la majorité de l’Assemblée doit être en accord avec le Gouvernement."
  },
  {
    "objectID": "posts/graphe_inter_vote/graphe_inter_vote.html#moyenne-des-vecteurs",
    "href": "posts/graphe_inter_vote/graphe_inter_vote.html#moyenne-des-vecteurs",
    "title": "De la notion de graphe inter-vote à la notion de représentativité",
    "section": "Moyenne des vecteurs",
    "text": "Moyenne des vecteurs\n\nRésultat d’un vote\nOn note \\bar{V_k}=\\frac{\\sum_{i=1}^{n}v_{i,k}}{n} le résultat d’un vote relatif à la loi k par les députés D. Ce résultat peut prendre une valeur comprise entre 0 et 1.\nDans un système démocratique ont peut admettre la règle :\n\nSi \\bar{V_k} &gt; 0.5 alors la loi k est adopté par D\nSi \\bar{V_k} &lt; 0.5 alors la loi k est rejeté par D\nSi \\bar{V_k} = 0.5 la loi k doit être revoté par D\n\nA partir de la règle précédente, on peut définir \\bar{V^A_k} tel que :\n\nSi \\bar{V_k} &gt; 0.5 alors \\bar{V^A_k}=1\nSi \\bar{V_k} &lt; 0.5 alors \\bar{V^A_k}=0\nSi \\bar{V_k} = 0.5 \\bar{V^A_k}=0.5\n\nOn peut également définir la moyenne de \\bar{\\bar{V_k}}=\\frac{\\sum_{k=1}^{p}\\bar{V_k}}{p} et cela définit la proportion de loi votés par les députés D\nExemple : 4 députés et 3 lois\n\n\nCode\nprint(\"Résultat d'un vote\")\n\n\n[1] \"Résultat d'un vote\"\n\n\nCode\nM %&gt;% \n  column_to_rownames(var = \"depute\") %&gt;% \n  summarise_all(mean)\n\n\n  loi_1 loi_2 loi_3\n1 0.625   0.5   0.5\n\n\nCode\nprint(\"Résultat alternatif d'un vote\")\n\n\n[1] \"Résultat alternatif d'un vote\"\n\n\nCode\nM %&gt;% \n  column_to_rownames(var = \"depute\") %&gt;% \n  summarise_all(mean) %&gt;% \n  as_tibble() %&gt;%\n  mutate_all(list(~\n    case_when(\n    . &gt; 0.5 ~ 1,\n    . &lt; 0.5 ~ 0,\n    . == 0.5 ~ 0.5)))\n\n\n# A tibble: 1 × 3\n  loi_1 loi_2 loi_3\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     1   0.5   0.5\n\n\nCode\nprint(\"Proportion de loi votés par les députés $D$\")\n\n\n[1] \"Proportion de loi votés par les députés $D$\"\n\n\nCode\nM %&gt;% \n  column_to_rownames(var = \"depute\") %&gt;% \n  summarise_all(mean) %&gt;%\n  rowMeans()\n\n\n[1] 0.5416667\n\n\nCode\nprint(\"proportion alternative de loi votés par les députés $D$\")\n\n\n[1] \"proportion alternative de loi votés par les députés $D$\"\n\n\nCode\nM %&gt;% \n  column_to_rownames(var = \"depute\") %&gt;% \n  summarise_all(mean) %&gt;% \n  as_tibble() %&gt;%\n  mutate_all(list(~\n    case_when(\n    . &gt; 0.5 ~ 1,\n    . &lt; 0.5 ~ 0,\n    . == 0.5 ~ 0.5))) %&gt;%\n  rowMeans()\n\n\n[1] 0.6666667\n\n\n\n\nAttitude face à la politique du gouvernement\nNoté que dans le cas où G \\in D=\\empty on peut définir alors \\bar{V_i}=\\frac{\\sum_{k=1}^{p}v_{i,k}}{p} la position d’un député i vis à vis de la politique du gouvernement G à travers les lois proposées L.\nDans un système démocratique ont peut admettre la règle :\n\nSi \\bar{V_i} &gt; 0.5 alors le député i est favorable à G à travers l’ensemble des lois L\nSi \\bar{V_i} &lt; 0.5 alors le député i est défavorable à G à travers l’ensemble des lois L\nSi \\bar{V_i} = 0.5 alors le député i est neutre à G à travers l’ensemble des lois L\n\nA partir de la règle précédente, on peut définir \\bar{V^A_i} tel que :\n\nSi \\bar{V_i} &gt; 0.5 alors \\bar{V^A_i}=1\nSi \\bar{V_i} &lt; 0.5 alors \\bar{V^A_i}=0\nSi \\bar{V_i} = 0.5 \\bar{V^A_i}=0.5\n\nOn peut également définir la moyenne de \\bar{\\bar{V_i}}=\\frac{\\sum_{i=1}^{n}\\bar{V_i}}{n} et cela définit la proportion de députés D favorables à l’action de G vis à vis de vis des lois proposées L.\nSi G \\in D\\neq\\empty l’analyse devient plus complexe car on peut légitimement pensée que voté pour une loi k si k provient de i est le résultat le plus probable.\nIl faut alors s’arranger pour ne considérer que les lois faites par G\\star où G\\star\\in D=\\empty\nExemple : 4 députés et 3 lois\n\n\nCode\nprint(\"Attitude face à la politique du gouvernement des députés\")\n\n\n[1] \"Attitude face à la politique du gouvernement des députés\"\n\n\nCode\nM %&gt;% \n  column_to_rownames(var = \"depute\") %&gt;% \n  rowMeans() %&gt;%  \n  as_tibble()\n\n\n# A tibble: 4 × 1\n  value\n  &lt;dbl&gt;\n1 0.5  \n2 0.667\n3 0.5  \n4 0.5  \n\n\nCode\nprint(\"Attitude alternative face à la politique du gouvernement des députés\")\n\n\n[1] \"Attitude alternative face à la politique du gouvernement des députés\"\n\n\nCode\nM %&gt;% \n  column_to_rownames(var = \"depute\")   %&gt;% \n  rowMeans() %&gt;%  \n  as_tibble() %&gt;%\n  mutate_all(list(~\n    case_when(\n    . &gt; 0.5 ~ 1,\n    . &lt; 0.5 ~ 0,\n    . == 0.5 ~ 0.5)))\n\n\n# A tibble: 4 × 1\n  value\n  &lt;dbl&gt;\n1   0.5\n2   1  \n3   0.5\n4   0.5\n\n\nCode\nprint(\"Attitude moyenne face à la politique du gouvernement des députés\")\n\n\n[1] \"Attitude moyenne face à la politique du gouvernement des députés\"\n\n\nCode\nM %&gt;% \n  column_to_rownames(var = \"depute\") %&gt;% \n  rowMeans()  %&gt;%  \n  as_tibble() %&gt;% \n  summarise(mean = mean(value))\n\n\n# A tibble: 1 × 1\n   mean\n  &lt;dbl&gt;\n1 0.542\n\n\nCode\nprint(\"Attitude moyenne alternative face à la politique du gouvernement des députés\")\n\n\n[1] \"Attitude moyenne alternative face à la politique du gouvernement des députés\"\n\n\nCode\nM %&gt;% \n  column_to_rownames(var = \"depute\")   %&gt;% \n  rowMeans() %&gt;%  \n  as_tibble() %&gt;%\n  mutate_all(list(~\n    case_when(\n      . &gt; 0.5 ~ 1,\n      . &lt; 0.5 ~ 0,\n      . == 0.5 ~ 0.5))) %&gt;% \n  summarise(mean = mean(value))\n\n\n# A tibble: 1 × 1\n   mean\n  &lt;dbl&gt;\n1 0.625"
  },
  {
    "objectID": "posts/graphe_inter_vote/graphe_inter_vote.html#différence-inter-vecteurs",
    "href": "posts/graphe_inter_vote/graphe_inter_vote.html#différence-inter-vecteurs",
    "title": "De la notion de graphe inter-vote à la notion de représentativité",
    "section": "Différence inter-vecteurs",
    "text": "Différence inter-vecteurs\n\nDifférence inter-députés\nOn note DIV_{k}(i,i\\star)=1-|{v_{i,k}-v_{i\\star,k}}| la différence de position entre le députés i et le députés i\\star relatif à une loi k.\nCette différence prend :\n\nla valeur 1 si le députés i et le députés i\\star ont la même position vis à vis de loi k\nla valeur 0 si le députés i et le députés i\\star ont une position différente vis à vis de la loi k\n\nOn peut alors définir \\bar{DIV}_{i,i\\star}=\\frac{\\sum_{k=1}^{p}IV_{k}(V_{i},V_{i\\star})}{p} la différence de position entre le députés i et le députés i\\star relatif à l’ensemble de lois L.\n\nSi \\bar{DIV}_{i,i\\star} &gt; 0.5 alors le député i et le député i\\star ont globalement la même position sur l’ensemble des lois L\nSi \\bar{DIV}_{i,i\\star} &lt; 0.5 alors le député i et le député i\\star ont globalement une position différente sur l’ensemble des lois L\nSi \\bar{DIV}_{i,i\\star} = 0.5 alors le député i et le député ont autant de même position que de position différente sur l’ensemble des lois L\n\nA partir de la règle précédente, on peut définir \\bar{DIV^A}_{i,i\\star} tel que :\n\nSi \\bar{DIV}_{i,i\\star} &gt; 0.5 alors \\bar{DIV^A}_{i,i\\star}=1\nSi \\bar{DIV}_{i,i\\star} &lt; 0.5 alors \\bar{DIV^A}_{i,i\\star}=0\nSi \\bar{DIV}_{i,i\\star} = 0.5 alors \\bar{DIV^A}_{i,i\\star}=0.5\n\n\n\nDifférence inter-lois\nOn note DIV_{i}(k,k\\star)=1-|{v_{i,k}-v_{i,k\\star}}| la différence de position du députés i entre la loi k et la loi k\\star.\nCette différence prend :\n\nla valeur 1 si le députés i a la même position vis à vis de loi k et de la loi k\\star\nla valeur 0 si le députés i a une position différente vis à vis de loi k et de la loi k\\star\n\nOn peut alors définir \\bar{DIV}_{k,k\\star}=\\frac{\\sum_{i=1}^{n}IV_{i}(k,k\\star)}{n} la différence de position entre la loi k et k\\star pour de l’ensemble des députés D.\n\nSi \\bar{DIV}_{k,k\\star} &gt; 0.5 alors globalement les députés D ont votés de la même façon entre la loi k et la loi k\\star\nSi \\bar{DIV}_{k,k\\star} &lt; 0.5 alors globalement les députés D ont votés de la façon différente entre la loi k et la loi k\\star L\nSi \\bar{DIV}_{k,k\\star} = 0.5 alors les député D ont autant de fois votés de la même façon que de façon différente\n\nA partir de la règle précédente, on peut définir \\bar{DIV^A}_{i,i\\star} tel que :\n\nSi \\bar{DIV}_{k,k\\star} &gt; 0.5 alors \\bar{DIV^A}_{k,k\\star}=1\nSi \\bar{DIV}_{k,k\\star} &lt; 0.5 alors \\bar{DIV^A}_{k,k\\star}=0\nSi \\bar{DIV}_{k,k\\star} = 0.5 alors \\bar{DIV^A}_{k,k\\star}=0.5"
  },
  {
    "objectID": "posts/graphe_inter_vote/graphe_inter_vote.html#graphes-associés",
    "href": "posts/graphe_inter_vote/graphe_inter_vote.html#graphes-associés",
    "title": "De la notion de graphe inter-vote à la notion de représentativité",
    "section": "Graphes associés",
    "text": "Graphes associés\nLe graphe est défini comme une collection d’éléments qui sont mis en relation entre eux. Leur représentation géométrique se fait à travers des modèles constitués par des points (appelés encore sommets ou nœuds) reliés par des lignes de courbes (appelée aussi arêtes, liens ou flèches). Les arêtes peuvent être non symétriques et sont alors considérées comme des flèches ou des arcs. Quand on choisit de les orienter et/ou leur attribuer un poids, les graphes sont dits orientés ou pondérés.\nOn note G=(V,E) avec V les noeuds et VE les relations entre les noeuds.\nCe graphe peut être définis par une matrice d’ajacence que l’on note M, matrice symétrique [n;n].\n\nGraphe inter-députés\nAvec les définitions précédentes, on peut poser V tel que V=D c’est à dire les députes et E comme l’ensemble des \\bar{DIV}_{i,i\\star} possible en faisant remarquer que \\bar{DIV}_{i,i\\star}=\\bar{DIV}_{i\\star,i} l’on peut définir avec n députés le nombre de relations distinctes n(n − 1)/2.\nOn peut également utiliser l’ensemble des \\bar{DIV^A}_{i,i\\star} pour définir les relations entre les noeuds à savoir l’ensemble des députés D.\n\n\nGraphe inter-députés\nAvec les définitions précédentes, on peut poser V tel que V=L c’est à dire les lois et E comme l’ensemble des \\bar{DIV}_{k,k\\star} possible en faisant remarquer que \\bar{DIV}_{k,k\\star}=\\bar{DIV}_{k\\star,k} l’on peut définir avec p lois le nombre de relations distinctes p(p − 1)/2."
  },
  {
    "objectID": "posts/graphe_inter_vote/graphe_inter_vote.html#tirage-au-sort-en-politique",
    "href": "posts/graphe_inter_vote/graphe_inter_vote.html#tirage-au-sort-en-politique",
    "title": "De la notion de graphe inter-vote à la notion de représentativité",
    "section": "Tirage au sort en politique",
    "text": "Tirage au sort en politique\nEn politique, le tirage au sort permet de désigner des représentants exécutifs, législatifs et judiciaires, aujourd’hui principalement des jurés et magistrats, au moyen du hasard et parmi un ensemble de candidats universel ou restreint. Dans le cas de la désignation d’une assemblée (échantillon large), le tirage au sort a la particularité d’assurer une représentativité plus importante que le vote.\nIl est de ce fait couramment promu, en complément des référendums, par les partisans de la démocratie directe."
  },
  {
    "objectID": "posts/graphe_inter_vote/graphe_inter_vote.html#députés-alternatifs",
    "href": "posts/graphe_inter_vote/graphe_inter_vote.html#députés-alternatifs",
    "title": "De la notion de graphe inter-vote à la notion de représentativité",
    "section": "Députés alternatifs",
    "text": "Députés alternatifs\nOn peut alors définir un ensemble de députés alternatifs C c’est à dire des gens choisis de façon aléatoire afin de votés sur le même ensemble L que l’espace de votes des députés D.\nOn peut définir les mêmes relations qu’auparavant entre D et L avec cette fois-ci C à la place de D ; mais l’on peut étant donné que l’espace L est commun à D et à C créer des relations supplémentaires."
  },
  {
    "objectID": "posts/graphe_inter_vote/graphe_inter_vote.html#différence-en-utilisant-lassemblée-élective-vis-à-vis-de-lassemblée-participitative",
    "href": "posts/graphe_inter_vote/graphe_inter_vote.html#différence-en-utilisant-lassemblée-élective-vis-à-vis-de-lassemblée-participitative",
    "title": "De la notion de graphe inter-vote à la notion de représentativité",
    "section": "Différence en utilisant l’assemblée élective vis à vis de l’assemblée participitative",
    "text": "Différence en utilisant l’assemblée élective vis à vis de l’assemblée participitative\n\nDifférence résultat de vote\nOn note \\bar{V_k^E} le résultat d’un vote relatif à la loi k par les députés D soit l’assemblée élective et \\bar{V_k^P} le résultat d’un vote relatif à la même loi k par les députés C soit l’assemblée participitative. A partir de ces deux résultat ont peut calculer pour chaque lois k la différence DIV_{k}(\\bar{V_k^E},\\bar{V_k^P})=1-|\\bar{V_k^E}-\\bar{V_k^P}|\nOn peut alors définir \\bar{DIV_{k}(\\bar{V_k^E},\\bar{V_k^P})}=\\frac{\\sum_{k=1}^{p}DIV_{k}(\\bar{V_k^E},\\bar{V_k^P})}{p} la différence de position entre l’assemblée élective et l’assemblée participitative vis à vis de l’ensemble des lois L.\n\nSi \\bar{DIV_{k}(\\bar{V_k^E},\\bar{V_k^P})} &gt; 0.5 alors globalement l’assemblée élective et l’assemblée participative ont les mêmes positions vis à vis de l’ensemble des lois L\nSi \\bar{DIV_{k}(\\bar{V_k^E},\\bar{V_k^P})} &lt; 0.5 alors globalement l’assemblée élective et l’assemblée participative ont des positions différentes vis à vis de l’ensemble des lois L\nSi \\bar{DIV_{k}(\\bar{V_k^E},\\bar{V_k^P})} = 0.5 alors globalement il est difficile de dire si l’assemblée élective et l’assemblée participative sont différentes ou similaire.\n\nOn peut faire remarquer qu’il est préférable dans ce cas de considérer la version alternative de \\bar{V_k} c’est à dire \\bar{V_k^A}. En effet prenons le cas fictif où \\forall x \\in L nous avons \\bar{V_x^E}=0.51 et \\bar{V_x^P}=0.49, nous obtenons donc DIV_{k}(\\bar{V_x^E},\\bar{V_x^P})=0.8 et également \\bar{DIV_{k}(\\bar{V_k^E},\\bar{V_k^P})}=0.8 alors même qu’aucune loi n’est accepté par l’assemblée participative et que toute le sont par l’assemblée élective.\nEn prenant la version alternative, nous arrivons à des résultats plus cohérants, mais nous perdons la notions d’écart, ainsi si \\bar{V_x^E}=0.99 et \\bar{V_x^P}=0.51 nous arrivons au même résultat que si \\bar{V_x^E}=0.51 et \\bar{V_x^P}=0.51 Notion de marge.\n\n\nDifférence d’attitude face à la politique du gouvernement\nOn ne peut ici faire le même travail qu’auparavant car la dimension de l’espace des \\bar{V_i^E} qui a la même dimension que l’espace des députés D n’est pas obligatoirement égale à la dimension de l’espace des \\bar{V_i^P} qui a la même dimension que l’espace des députés C. Autrement dit dim(D) \\neq dim(C) et à fortiori dim(D) &lt; dim(C)\nIl faut donc trouver un moyen de réduire la dim(C) afin à défaut de pouvoir augmenté dim(D).\nUne solution radicale est de considérer est de considérer la différence entre \\bar{\\bar{V_k^E}} et \\bar{\\bar{V_k^P}} la différence entre la moyenne des attitudes des députés D de l’assemblée élective et la moyenne des attitudes des députés C de l’assemblée participative.\nUne autre solution plus subtile consiste à créer un sous-ensemble C^i de députés de C de l’assemblée participative est rattachant ce sous ensemble à un députés i \\in D de l’assemblée élective .\nEn considérant autant de sous-ensemble que l’on peut avoir de députés D de l’assemblée participative soit C=C^1,..C^n et que \\forall j \\in C soit au moins rattaché à un C^i et seulement C^i.\nNous pouvons considérer \\bar{V_i^P}=\\frac{\\sum_{j=1}^{dim(C^i)}\\bar{V_j}}{dim(C^i)}, nous obtenons alors deux objets définis dans le même espace à savoir l’espace des députés D de l’assemblée élective.\nOn note \\bar{V_i^E} la position d’un députés i \\in D de l’assemblée élective vis à vis de l’ensemble des lois L et \\bar{V_i^P} la position des députés j in C^i de l’assemblée participatitative rattachés à un député i de l’assemblée élective. A partir de ces deux résultat ont peut calculer pour chaque députés i la différence DIV_{i}(\\bar{V_i^E},\\bar{V_i^P})=1-|\\bar{V_i^E}-\\bar{V_i^P}|.\nRemarque : Pour chaque DIV_{i}(\\bar{V_i^E},\\bar{V_i^P}) ont peut considérer comme le degré de répresentativité du députés i vis à vis des représentés j in C^i\nOn peut alors définir \\bar{DIV_{i}(\\bar{V_i^E},\\bar{V_i^P})}=\\frac{\\sum_{i=1}^{n}DIV_{i}(\\bar{V_i^E},\\bar{V_i^P})}{n} la différence de d’attitude face à la politique du gouvernement entre l’assemblée élective et l’assemblée participitative vis à vis de l’ensemble des lois L.\n\nSi \\bar{DIV_{i}(\\bar{V_i^E},\\bar{V_i^P})} &gt; 0.5 alors globalement l’assemblée élective et l’assemblée participative ont la même attitudes vis à vis du gouvernement G\nSi \\bar{DIV_{i}(\\bar{V_i^E},\\bar{V_i^P})}  &lt; 0.5 alors globalement l’assemblée élective et l’assemblée participative ont des attitudes différentes vis à vis du gouvernement G\nSi \\bar{DIV_{i}(\\bar{V_i^E},\\bar{V_i^P})}  = 0.5 alors globalement il est difficile de dire si l’assemblée élective et l’assemblée participative ont des attitudes différentes ou la ."
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#présentation-du-principe-etl",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#présentation-du-principe-etl",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "1.1 Présentation du principe ETL",
    "text": "1.1 Présentation du principe ETL\n\n1.1.1 Présentation du principe ESB\n\nL’Enterprise Service Bus (ESB) est un modèle d’architecture logicielle qui prend en charge l’échange de données en temps réel entre des applications disparates. Les grandes entreprises disposent de plusieurs applications qui exécutent diverses fonctions en utilisant des modèles de données, des protocoles et des restrictions de sécurité différents. L’ESB facilite l’intégration des applications en effectuant des opérations telles que la transformation des données, la conversion des protocoles et le routage des messages. Les applications transmettent les données pertinentes à l’ESB, qui les convertit et les transmet à d’autres applications qui en ont besoin.\nTalend ESB (Enterprise Service Bus), développé par la société Talend, permet le développement de bus applicatif de type middleware messaging et facilite grandement l’exposition de données via des API (Rest & SOAP)\n\n\n\n1.1.2 Présentation du principe ETL\n\nC’est un concept signifiant le chargement de données d’un point A vers un point B ou les données de A sont éventuellement transformé afin d’être chargés dans B.\nUn logiciel ETL (Extract, Transform, Load) permet d’extraire des données brutes depuis une base de données, pour ensuite les restructurer, et enfin les charger.\nLes premiers ETL ont fait leur apparition dans les années 1970, mais ont beaucoup évolué pour répondre aux nouveaux besoins liés à l’essor du Cloud, des SaaS (logiciels en tant que service) et du Big Data.\nDésormais, les ETL doivent permettre l’ingestion en temps réel, l’enrichissement de données, la prise en charge de milliards de transactions. Ils prennent aussi en charge les données structurées ou non structurées en provenance de sources sur site ou sur le Cloud.\nDe même, ces plateformes doivent désormais être scalables, flexibles, résistantes aux pannes, et sécurisées.\nLa différence entre l’ETL et l’ELT réside dans le fait que les données sont transformées en informations décisionnelles et dans la quantité de données conservée dans les entrepôts.\n\nL’ETL (Extract/Transform/Load) est une approche d’intégration qui recueille des informations auprès de sources distantes, les transforme en formats et styles définis, puis les charge dans des bases de données, sources de données ou entrepôts.\n\n\n\nL’ELT (Extract/Load/Tansform) extrait également des données à partir d’une ou plusieurs sources distantes, mais les charge ensuite dans l’entrepôt de données cible sans changement de format. Dans un processus ELT, la transformation des données s’effectue au sein de la base de données cible. L’ELT nécessite moins de sources distantes, uniquement leurs données brutes et non préparées.\n\n\nLes deux approches sont viables, mais les décideurs informatiques, lorsqu’ils créent une architecture de données, doivent prendre en compte les capacités internes et l’impact croissant des technologies Cloud.\nTalend ESB (Enterprise Service Bus) est donc également un logiciel ETL de manière simplifier afin que le développeur ne s’occupe que de la partie règle de métier.\n\n\n\n1.1.3 Présentation de la différence entre ETL & ESB\n\nL’ESB (Enterprise Service Bus) et l’ETL (Extract, Transform, Load) sont deux technologies positionnées sur le transport et la transformation de la donnée au sein du système d’information. Mais, historiquement, elles répondent à des objectifs différents. L’ESB permet des échanges de données fiables et sécurisés entre les différentes applications du SI tandis que l’ETL centralise et homogénéise les données de sources multiples vers une seule et même application de destination.\nConcrètement, l’ESB est adaptée lorsqu’il s’agit de traiter une fréquence élevée de flux de données avec une volumétrie limitée. Plutôt orientée services, sa fonction est de transporter et décloisonner l’information pour la rendre accessible sur les différents outils métiers qui composent le SI.\nPar ailleurs, l’ETL peut traiter un important volume de données de manière performante, mais sur un nombre d’échanges limité. Sa fonction est d’agréger toutes les informations pour traiter la donnée comme un ensemble standardisé. C’est une approche particulièrement adaptée pour les projets de Business Intelligence et de data warehousing."
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#présentation-dun-workspace",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#présentation-dun-workspace",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "1.2 Présentation d’un workspace",
    "text": "1.2 Présentation d’un workspace\n\nLes projet Talend sont stockés dans un espace de travail (workspace)\nChaque projet Talend contient un ensemble de Jobs (traduit sous forme de “classe”), ces jobs Talend sont stockés dans un projet Talend.\nCi-dessous, vous verrez l’arborescence d’un projet Talend :\n\nworkspace\n\nprojet1\n\nbusinessProcess (les Business Models)\ncode (les Routines)\nconfiguration (les fichiers de configuration)\ncontext (les contextes)\ndocumentations (les documentations créés dans les jobs)\nimages (les images des tMap par exemple)\njoblets (les joblets pour les version TIS)\nmetadata (les metadata)\nprocess (les jobs)\nsqlPatterns (les patterns sql)\ntemp (les fichiers temporaires)\n\nprojet2\n\nbusinessProcess\ncode\n…\n\n\n\nAvant de créer son premier workspace , il convient de lancer Talend Studio.\nEn supposant que les étapes précédentes ont été respectées, il convient de :\n\nSe rendre dans ce chemin : C:/ESB_731/Studio\nFaire un double clic gauche sur l’exécutable TOS_ESB-win-x86_64.exe afin de démarrer Talend Studio.\n\n\n\n\n\n\n\nTip\n\n\n\nIl est recommandé de créer un raccourci vers l’exécutable dans son Bureau afin d’éviter une navigation inutile.\nRappel : CTRL+C sur l’exécutable puis CTRL+V sur le Bureau\n\n\nÀ l’exécution vous devriez avoir la fenêtre suivante qui s’ouvre :\n Par défaut, le WORKSPACE sera situé dans le chemin suivant :\n\nC:/ESB_731/Studio/workspace\n\nPour pouvoir changer d’endroit, il convient de :\n\nCliquer sur : Gérer les connexions\nDans la partie Espace de travail : Mettre le chemin souhaité"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#présentation-du-studio",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#présentation-du-studio",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "1.3 Présentation du Studio",
    "text": "1.3 Présentation du Studio\n\nRappel commande utile :\n\nCTRL + A : Tout sélectionner\nCTRL + C : Copier\nCTRL + V : Coller\nCTRL + Z : Revenir à l’état précédant une action\nCTRL + Y : Revenir à l’état succédant une action\nCTRL + S : Sauvegarder\n\n\n\n1.3.1 Présentation de la Barre Principal\n\n\n\nFICHIER : Permets de changer de WORKSPACE et de modifier les propriétés du projet\nEDITER : Revenir en arrière, Copier, Coller, ect…\nFENÊTRE :\n\nModifier les éléments visuels du Studio\nModifier l’ensemble des paramètres pour les jobs du projet dans l’onglet Préférences\n\n\n\n\n\n1.3.2 Présentation du Quadrant Nord Ouest\n\n\n\nBUSINESS MODELS : (Aucune idée de l’utilité ou non)\n\nJOBS : L’endroit où l’on peut retrouver les différents JOB, par JOB on entend un traitement de données.\n\nROUTES : La principale différence entre les ROUTES et les JOB est que lorsque vous démarrez une route, elle écoute ou STREAM indéfiniment les entrées (fichier, message, etc.), et chaque fois qu’elles sont disponibles, elles sont traitées et envoyées à destination, jusqu’à ce que la route soit arrêtée. D’autre part, un JOB est un processus par lots ou BATCH qui est lancé à la demande pour gérer certaines entrées (fichiers, base de données, etc.) et se termine lorsque toutes les entrées sont traitées.\n\n\n\n\n\n\n\nTip\n\n\n\nUn point important à noter est que vous pouvez appeler des Jobs Talend à partir d’une Route Talend si vous le souhaitez.\n\n\n\nSERVICES : Un webservice est une fonction qui a pour rôle de mettre un disposition un service via internet. Le webservice est une interface entre deux applications, et leur permet tout comme l’API, de communiquer entre elles. Le webservice permet à des applications de communiquer entre elles même si elles fonctionnent avec des langages différents. Les webservices les plus connus sont de types SOAP, REST et HTTP.\n\n\n\n\n\n\n\nTip\n\n\n\nLes services de type REST peuvent se développer de la même manière qu’un job, seule la construction et le déploiement divergent.\n\n\n\n\n\n\n\n\nTip\n\n\n\nFonctionnement d’un webservice :\n\nÉtape 1 : Un utilisateur sur un ordinateur ou un mobile fait une demande. On l’appelle le client. Sa demande représente une requête qui est envoyée dans un langage spécfique : XML, HTTP ou encore JSON.\n\nÉtape 2 : La requête issue du client est envoyée sur un serveur distant via un protocole de type SOAP, REST ou HTTP.\nÉtape 3 : Le serveur va émettre une réponse qui aura le même format que celui du protocole de la demande.\n\n\n\n\n\nCONTEXTE : L’endroit où l’on peut retrouver les variables de contexte qui sont disponibles à l’exécution du JOB que l’on oppose aux variables globales qui sont disponibles dans le JOB.\nCes variables peuvent être regroupées dans une catégorie qu’on appelle GROUPE et peuvent prendre leurs valeurs en fonction d’un ENVIRONNEMENT.\nRESSOURCE : (Aucune idée de l’utilité ou non)\n\nCODE : Permets de faire du code Java que l’on pourra réutiliser, on appelle ce code ROUTINES.\n\n\n\n\n\n\n\nNote\n\n\n\nPar défaut un certain de nombre de ROUTINES sont disponibles :\n\nMathematical : Permet de faire des opérations mathématiques sur des entiers ou des numeriques\nTalendDate : Permet de faire des opérations sur des dates\nStringHandling : Permet de faire des opérations sur des chaines de charactères\n\n\n\n\nMODEL SQL : (Aucune idée de l’utilité ou non)\n\nMETADONNE : L’endroit où l’on stocke les metadata des diverses sources ou cibles de données possibles.\nOn peut faire remarquer que ces metadata peuvent être paramètrées par des variables de contextes :\n\nBDD\n\nFichier Délimité\n\nFichier JSON\n\n…\n\n\n\n\n\n1.3.3 Présentation du Quadrant Nord Est\n\n\nL’endroit où nous allons créer les jobs qui prennent généralement des sources de données effectue des transformations en vue de les mettre dans une autre ou la même source de données.\n\nCette partie ne prend sens uniquement lorsqu’un JOB est ouvert.\nOn importe des composants :\n\nVia la palette à droite\nEn cliquant n’importe où dans la fenêtre puis en écrivant le nom du composant que l’on souhaite importer.\nPar exemple : tFileInputDelimited\n\nDans l’onglet Code, on peut voir le code du job.\nCelui-ci n’est là qu’à titre informatif et ne peut être modifié, il permet néanmoins de détecter d’éventuel erreur de compilation.\n\n\n\n\n\n\nWarning\n\n\n\nSeule l’onglet Designer permet de développer.\nNe permet de détecter les erreurs qui peuvent se produire dans l’éxécution du job\n\n\n\n\n\n\n1.3.4 Présentation du Quadrant Sud Ouest\n{#quad-so}\n\n\n\nAPERCU DU CODE : (Aucune idée de l’utilité ou non)\nOUTLINE : Ne prend sens que dans le cas où un JOB est ouvert.\nOn retrouve ici l’ensemble des composants utilisés dans le JOB ouvert et les variables globales que ces composants génèrent.\nCes variables peuvent être disponible avant ou pendant l’exécution du composant.\n\n\n\n\n\n\n\nUtile\n\n\n\nLes variables globales définis par les composants, peuvent être appelés une fois qu’elle ont été définis dans d’autres composants.\n\n\n\n\n\nQUADRANT SUD EST\n\n\nCOMPOSANT : Ne prend sens que dans le cas où un JOB est ouvert et qu’on a cliqué sur un composant.\nDans cette fenêtre, nous allons paramétrer le composant afin que celui fonctionne selon nos besoins \nCONTEXT : Permet de visualiser et de gérer l’ensemble des variables de contexte utilisés dans le JOB \nEXECUTER LE JOB : Ne prend sens que dans le cas où un JOB est ouvert, il permet d’exécuter le traitement et d’afficher ce qui arrive dans la console.\nUne exécution en mode DEBUG est possible; une telle exécution permet d’afficher l’ensemble des variables utilisées par le programme et leurs valeurs à l’instant T.\nIl est également dans ce mode DEBUG de faire une pause dans le traitement. Deux types d’erreur peuvent se produire :\n\nLes erreurs de compilation sont la conséquence d’un code mal écrit et se manifeste lors de la construction du job.\n\nLes erreurs dans l’éxécution sont la conséquence d’un code mal écrit ou mal définis et se manifeste lors de l’éxécution du job."
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#présentation-dun-job",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#présentation-dun-job",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "1.4 Présentation d’un JOB",
    "text": "1.4 Présentation d’un JOB\n\nUn job peut être vu comme un ensemble de composants liés les uns aux autres et se lit de gauche à droite puis du haut vers le bas ; à la manière de la lecture française.\nLes liens entre composants peuvent être de différentes natures :\n\nRow : Les lignes sont transférés de la sortie d’un composant à l’entrée d’un autres composant\n\nMain : L’ensemble des lignes sont transférés\nIterate : Chaque ligne passe dans le composant de façon itérative\n\nTrigger : Le composant s’éxécute en fonction d’une condition testé à la fin de l’éxécution d’un autres composants\n\nOn Component OK/ERROR : Le composant s’éxecute en fonction de si le composant précédent à réussi ou pas\nOn Subjob OK/ERROR : Le composant s’éxecute en fonction de si le sous-job précédent càd une suite de composant lié en mode Row à réussi ou pas\nIf : Le composant s’éxécute en fonction d’une condition qui retourne TRUE ou FALSE.\n\n\n\n\n\n\n\n\nConvention\n\n\n\nOn parle de sous-job lorsqu’une suite de composant est lié par des liens de type Row\n\n\nPar convention, on lit les composants de gauche à droite lorsque le lien est de type Row et de haut en bas lorsque le lien est de type If\nUn composant est un sous-ensemble d’un job qui effectue une opération définie. Par exemple : lire un fichier, filtrer des données ou encore extraire des données.\nUn composant est composé d’un extrait de code Java généré automatiquement. Le but des composants est de gagner du temps en évitant le codage manuel pour effectuer les opérations de traitement de données courantes.\nTalend propose une multitude de composants prêts à emploi regroupés un répertoire. Il est possible de développer des composants sur-mesure si Talend ne propose aucun composant répondant à votre besoin.\nCes composants nécessitent un paramétrage, le paramétrage peut être définis selon deux façons :\n\nEn dure dans le sens où les valeurs associé aux paramètres du composant est définis par une valeur fixe écrit par le développeur\nAvec variable dans le sens où les valeurs associé aux paramètres du composant est définis par une valeur porté par une variable :\n\ncontexte : Disponible à l’exécution du job\nglobale : Définis dans le job\n\n\nLes variables de contexte sont souvent utilisée pour porter les paramétrages de composant. Ces variables de contexte peuvent être regroupés dans un GROUPE et les valeurs portés par ces variables peuvent être définis en fonction d’ENVIRONNEMENT.\nGénéralement, on définis au moins trois environnement.\nPrenons l’exemple d’un job visant à alimenter une BDD, on définis un groupe de contexte visant à porter les paramètres pour s’y connecter, on définit trois environnements :\n\nDEV : BDD sur son poste permettant de faire son développement\nQUAL : BDD sur un serveur dédié visant à simuler un traitement opérationnelle\nPROD : BDD opérationnel\n\nCertain composant peuvent être paramétrer via le concept de metadata, ce qui permet la réutilisation du composant avec le paramétrage associé.\nOn oppose ce concept de metada au fait de paramétrer le composant dans le job lui-même.\nCertains paramétrages peut être fait de façon partiellement automatique ou à la main. C’est le cas notamment des composants de lecture de fichier, par exemple tFileInputDelimited\n\nÀ la main :\n\nAVANTAGE : CONTROLE\nDESAVANTAGE : VITESSE\n\nAutomatique :\n\nAVANTAGE : VITESSE\nDESAVANTAGE : CONTROLE\n\n\n\n\n\n\n\n\nRecommandation\n\n\n\nIl est recommandé de laisser Talend définir les metadata et de corriger le résultat si celui-ci ne convient pas"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#talend",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#talend",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "2.1 TALEND",
    "text": "2.1 TALEND\n\n\nEtape 0 : Se rendre dans le dossier Google Drive suivant :\n\ngoogle_drive\n\nEtape 1 : Télécharger l’archive ESB_731.7z\nEtape 2 : Extraire l’archive téléchargée précédemment à la racine du disque C:/\n\nÀ la fin de ces étapes, vous devriez obtenir le dossier suivant :\n\nÉgalement les sous-dossiers suivants :"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#java",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#java",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "2.2 JAVA",
    "text": "2.2 JAVA\n\nTalend peut être vu comme un générateur de code Java, ainsi il est donc nécessaire de disposer d’une version de machine java adapté à la version de Talend utilisé.\n\nEtape 0 : Se rendre dans le dossier Google Drive suivant :\n\ngoogle_drive\n\nEtape 1 : Télécharger l’archive jdk-20.zip\nEtape 2 : Extraire l’archive téléchargée précédemment à la racine du disque C:/\nEtape 3 : Lancer une invite de commande (Rappel : cmd dans une fenêtre)\nEtape 4 : Lancer les commandes suivantes :\n\nset PATH=C:\\jdk-20\\bin;%PATH%\njava -version\nwhere java\n\n\nÀ la fin de ces étapes, vous devriez obtenir le résultat suivant :\n Une autre solution est de spécifier le JAVA a utilisé par TALEND.\n\nEtape 0 : Se rendre dans le dossier d’installation suivant suivant C:/ESB_731 :\nEtape 1 : Ouvrir le fichier TOS_ESB-win-x86_64.ini\nEtape 2 : A début du fichier ajouter les deux lignes suivnantes :\n\n-vm\nC:\\Program Files\\Java\\jdk-20\\bin\n\n\nÀ la fin de ces étapes, vous devriez obtenir le résultat suivant :"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#notepad",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#notepad",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "2.3 NOTEPAD++",
    "text": "2.3 NOTEPAD++\n\n\nEtape 0 : Se rendre dans le dossier Google Drive suivant :\n\ngoogle_drive\n\nEtape 1 : Télécharger l’archive Notepad++.7z\nEtape 2 : Extraire l’archive téléchargée précédemment à la racine du disque C:/\n\nÀ la fin de ces étapes, vous devriez obtenir le résultat suivant :\n\nÉgalement les sous-dossiers suivants :\n\nOn peut également télécharger des add-ons à Notepad :\n\nJSON Viewer : Pour mieux visualiser des fichiers JSON\nXML Tools : Pour mieux visualiser des fichiers XML\n\nPour pouvoir installer un add-on, il convient de :\n\nEtape 0 : Ouvrir Notepad\nEtape 1 : Cliquer Modules d’extension&lt;Gestionnaires des modules d’extension\nEtape 2 : Rechercher JSON VIEWER puis cocher (Faire de même avec XML TOOLS)\nEtape 3 : Cliquer sur Installer\n\nÀ la fin de ces étapes, vous devriez obtenir le résultat suivant :"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#dbeaver",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#dbeaver",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "2.4 DBEAVER",
    "text": "2.4 DBEAVER\n\n\nEtape 0 : Se rendre dans le dossier Google Drive suivant :\n\ngoogle_drive\n\nEtape 1 : Télécharger l’archive Dbeaver.7z\nEtape 2 : Extraire l’archive téléchargée précédemment à la racine du disque C:/\n\nÀ la fin de ces étapes, vous devriez obtenir le résultat suivant :\n\nÉgalement les sous-dossiers suivants :"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#postgresql",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#postgresql",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "2.5 POSTGRESQL",
    "text": "2.5 POSTGRESQL\n\nExpliquer les procédures serait un peu compliqué et redondant par rapport à la documentation qu’on peut trouver sur le web.\nVous pouvez suivre la procédure ici :\npostgresql"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#postman",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#postman",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "2.6 POSTMAN",
    "text": "2.6 POSTMAN\n\n\nEtape 0 : Se rendre sur le site suivant :\n\npostman\n\nEtape 1 : Télécharger l’archive Postman-win64-Setup.exe\nEtape 2 : Double-cliquer sur l’exécutable et laissez vous guider par l’assistant d’installation\n\nÀ la fin de ces étapes, vous devriez obtenir le résultat suivant :"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#workspace---création-dun-projet",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#workspace---création-dun-projet",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "3.1 WORKSPACE - Création d’un projet",
    "text": "3.1 WORKSPACE - Création d’un projet\n\n\n\n\n\n\n\nObjectif\n\n\n\nNous allons dans cette partie créée notre premier et unique projet.\n\n\n\nEtape 0 : Créer un dossier : C:/workspace_talend\nEtape 1 : Démarrer Talend\nEtape 2 : Cliquer sur “Gérer les connexions” et choisir le dossier C:/workspace_talend créé en étape 0\nEtape 3 : Attendre que Talend redémarre\nEtape 4 : Créer un projet nommé : OPENDATA_ASSEMBLEE_NATIONALE\n\n\n\n\n\n\n\nSolution"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#csv-traitement-des-données-des-députés",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#csv-traitement-des-données-des-députés",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "3.2 CSV – Traitement des données des députés",
    "text": "3.2 CSV – Traitement des données des députés\n\nTELECHARGEMENT DU FICHIER\n\nCREATION DU JOB\n\n\n\n\n\n\n\nObjectif\n\n\n\nL’objectif ici est de télécharger le fichier source que nous allons utilisé par la suite.\n\n\n\n\n\n\n\n\nComposant\n\n\n\n\ntFileFetch : Ce composant récupère un fichier via un protocole donné (HTTP, HTTPS, FTP ou SMB).\n\n\n\n\nEtape 0 : Créer un job avec :\n\npour titre : DL_DATA_DEPUTE\npour objectif : Téléchargement d’un fichier de type csv contenant les informations des députés\npour description le bloc suivant en remplaçant les {} par vos informations :\n\n##########                \nDATE DE CREATION : {dd/MM/yyyy}       \nDATE DE MODIFICATION :         \nVERSION : 0.1       \nAUTEUR : {nom_prenom}       \nDESCRIPTION  : CREATION DU JOB       \n##########\n\n\nEtape 1 : Créer un dossier dans lequel nous allons mettre des fichiers brut non généré par le job qu’il prend en entrée :\n\nC:/workspace_talend/source/\n\nEtape 2 : Créer un dossier dans lequel nous allons mettre des fichiers généré par le job qu’il génère en sortie :\n\nC:/workspace_talend/cible/\n\nEtape 3 : Pour effectuer le téléchargement, nous allons utilisé le composant tFileFetch qui peut être trouvé soit dans la palette à droite, soit en tapant directement tFileFetch n’importe où dans le QUADRANT NORD EST.\nSoit le paramétrage suivant :\n\n##########\nURL : https://www.data.gouv.fr/fr/datasets/r/092bd7bb-1543-405b-b53c-932ebb49bb8e       \nMETHODE : GET        \nNOM_FICHIER : depute.csv        \nCIBLE : C:/workspace_talend/source/depute/\nARRET EN CAS D'ERREUR\n##########\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n\n\n\n\n\n\n\nEXECUTION DU JOB\n\n\n\n\n\n\n\nObjectif\n\n\n\nL’objectif ici est de vérifier la bonne éxécution du job.\nIci nous souhaitons simplement télécharger un fichier csv dans un dossier, il convient donc de s’assurer que ce fichier est bien présent dans le dossier spécifié.\n\n\n\nEtape 1 : Pour pouvoir exécuter un job, il convient de se mettre dans l’onglet “EXECUTER” dans le QUADRANT SUD EST.\nEtape 2 : Cliquer EXECUTER et observer qu’aucune erreur de compilation n’est générée.\n\nEtape 3 : Vérifier la présence du fichier C:/workspace_talend/source/depute/depute.csv.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLECTURE DU FICHIER\n\nCREATION DU JOB\n\n\n\n\n\n\n\nObjectif\n\n\n\nNous allons dans cette partie créer un second job qui va lire le fichier télécharger par le premier.\n\n\n\n\n\n\n\n\nListe des composants\n\n\n\n\ntFileInputDelimited : Ce composant lit un fichier délimité ligne par ligne, afin de le diviser en champs et d’envoyer ces champs au composant suivant, comme défini par le schéma.\n\n\n\n\nEtape 0 : Créer un job avec :\n\npour titre : READ_DATA_DEPUTE\npour objectif : Lecture d’un fichier de type csv contenant les informations des députés et dans la description\npour description le bloc suivant en remplaçant les {} par vos informations :\n\n##########                \nDATE DE CREATION : {dd/MM/yyyy}       \nDATE DE MODIFICATION :         \nVERSION : 0.1       \nAUTEUR : {nom_prenom}       \nDESCRIPTION  : CREATION DU JOB       \n##########    \n\n\nEtape 1 : Déterminer la structure du fichier avec Notepad.\nEtape 2 : Lire le fichier C:/workspace_talend/source/depute/depute.csv\nAvec un composant tFileInputDelimited que nous allons spécifier de la façon suivante:\n\nLe paramètrage\n\n##########                \nENTETE : Ligne 1               \nSEPARATION : Virgule             \nNOM_FICHIER : depute.csv              \nCIBLE : C:/workspace_talend/source/depute/        \n##########               \n\nLe schéma\n\n\n\nStructure du fichier député\n\n\nNom du champ\nType\nNullable\n\n\n\n\nid\nSTRING\nYES\n\n\nlegislature\nSTRING\nYES\n\n\nciv\nSTRING\nYES\n\n\nnom\nSTRING\nYES\n\n\nprenom\nSTRING\nYES\n\n\nvilleNaissance\nSTRING\nYES\n\n\nnaissance\nSTRING\nYES\n\n\nage\nSTRING\nYES\n\n\ngroupe\nSTRING\nYES\n\n\ngroupeAbrev\nSTRING\nYES\n\n\ndepartementNom\nSTRING\nYES\n\n\ndepartementCode\nSTRING\nYES\n\n\ndatePriseFonction\nSTRING\nYES\n\n\nmail\nSTRING\nYES\n\n\ntwitter\nSTRING\nYES\n\n\nfacebook\nSTRING\nYES\n\n\nwebsite\nSTRING\nYES\n\n\nnombreMandats\nSTRING\nYES\n\n\nexperienceDepute\nSTRING\nYES\n\n\nscoreParticipation\nSTRING\nYES\n\n\nscoreParticipationSpecialite\nSTRING\nYES\n\n\nscoreLoyaute\nSTRING\nYES\n\n\nscoreMajorite\nSTRING\nYES\n\n\ndateMaj\nSTRING\nYES\n\n\n\n\n\n\n\n\n\nType des données\n\n\n\nNous avons dans un premier temps spécifié le type STRING pour l’ensemble des champs afin d’être sûr de bien pouvoir lire le fichier.\nEn effet, le type STRING est le plus complet dans le sens où touts les types peuvent être convertis en STRING\nVoir Table 1.\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nEtape 1\n\n\nEtape 2\nNous effectuons ici un paramétrage à la main.\n\n\nEtape 2 : Alternative\nNous effectuons ici un paramétrage via l’utilisation d’une metadonnées définit par Talend.\n\n\n\n\n\n\n\n\nEXECUTION DU JOB\n\n\n\n\n\n\n\nObjectif\n\n\n\nL’objectif ici est de vérifier la bonne éxécution du job.\nIci nous souhaitons simplement lire un fichier csv, il convient donc de s’assurer d’imprimer dans la console leslignes lus.\n\n\n\n\n\n\n\n\nListe des composants\n\n\n\n\ntLogRow : Ce composant affiche les données ou les résultats dans la console de la vue Run afin de monitorer les données traitées.\n\n\n\n\nEtape 0 : Ajouter un composant tLogRow du côté droit du composant tFileInputDelimited\nEtape 1 : Cliquer droit sur le composant tFileInputDelimited puis choisir un lien Row puis Main et le lier au composant tLogRow\nEtape 2 : Exécuter le job pour observer les lignes lus par le composant tFileInputDelimited à travers le composant tLogRow\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nACTION SUR LA DONNEES\n\nNous allons utiliser un composant tMap qui prend une ou plusieurs sources en entrée, permet de faire des actions sur ces données afin de définir une ou plusieurs cibles de données.\nCes actions peuvent être listées :\n\nTransformation\nJointure\nFiltre\nSélection\n\n\n\nTRANSFORMATION ET SELECTION\n\n\n\n\n\n\n\nObjectif\n\n\n\nL’objectif ici est de créer un nouveau champ qui donnerait l’intitule du depute.\nExemple : M. GOLLENTZ QUENTIN\nNous souhaitons également sélectionner quelque champs que l’on va mettre en majuscule, renommer et trimer(=Supprimer les espaces avant et après le dernier charactère)\nPlus précisément on veut créer un fichier en effectuant le mapping suivant :\n\n\n\n\n\n\n\n\nNom du source\nNom du champ cible\nFonction\n\n\n\n\ndepute_code\nrow1.id\n/\n\n\nnom_depute\nrow1.nom\nTRIM & MAJ\n\n\nprenom_depute\nrow1.prenom\nTRIM & MAJ\n\n\nintitule_depute\nrow1.civ + ” ” + row1.nom + ” ” + row1.prenom\nTRIM & MAJ\n\n\ngroupe_politique\nrow1.groupeAbrev\nTRIM & MAJ\n\n\n\n\n\n\n\n\n\n\n\nListe des composants et fonctions\n\n\n\n\ntFileInputDelimited : Ce composant lit un fichier délimité ligne par ligne, afin de le diviser en champs et d’envoyer ces champs au composant suivant, comme défini par le schéma.\n\ntMap : Ce composant transforme et route des données à partir d’une ou plusieurs source(s) de données vers une ou plusieurs destination(s).\n\ntFileOutputDelimited : Ce composant écrit en sortie les données d’entrée dans un fichier délimité en respectant le schéma défini.\nMAJ : StringHandling.UPCASE()\nTRIM : StringHandling.TRIM()\n\n\n\n\nEtape 0 : Créer un job avec :\n\npour titre : TRANSFORM_DATA_DEPUTE\npour objectif : Transformation du fichier deputes.csv\npour description le bloc suivant en remplaçant les {} par vos informations :\n\n##########                \nDATE DE CREATION : {dd/MM/yyyy}       \nDATE DE MODIFICATION :         \nVERSION : 0.1       \nAUTEUR : {nom_prenom}       \nDESCRIPTION  : CREATION DU JOB       \n##########\n\n\nEtape 2 : Lire le fichier C:/workspace_talend/source/depute/depute.csv de la même manière que dans le job READ_DATA_DEPUTE\n\n\n\n\n\n\n\nInteret de la metada\n\n\n\nOn voit ici l’avantage de spécifié des metada.\nSi vous avez spécifié la metadata FICHIER_DEPUTE alors vous pouvez directement l’importer sans avoir à refaire le le paramétrage.\nSi non vous pouvez toujours copier le tFileInputDelimited du job READ_DATA_DEPUTE et le coller dans le nouveau job TRANSFORM_DATA_DEPUTE\n\n\n\nEtape 3 : Ajouter un composant tMap du côté droit du composant tFileInputDelimited\nEtape 4 : Cliquer droit sur le composant tFileInputDelimited puis choisir un lien Row puis Main et le lier au composant tMap\nEtape 5 : Dans le tMap créer une sortie depute_transform avec le mapping suivant :\n\n\n\n\n\n\n\n\n\n\nNom du source\nType source\nNom du champ cible\nType cible\n\n\n\n\ndepute_code\nSTRING\nrow1.id\nSTRING\n\n\nnom_depute\nSTRING\nrow1.nom\nSTRING\n\n\nprenom_depute\nSTRING\nrow1.prenom\nSTRING\n\n\nintitule_depute\nSTRING\nrow1.civ + ” ” + row1.nom + ” ” + row1.prenom\nSTRING\n\n\ngroupe_politique\nSTRING\nrow1.groupeAbrev\nSTRING\n\n\n\n\nEtape 6 : Ajouter un composant tFileOutputDelimited du côté droit du composant tMap\nEtape 7 : Cliquer droit sur le composant tMap puis choisir un lien Row puis depute_transform et le lier au composant tFileOutputDelimited\nEtape 8 : Paramètrer le composant tFileOutputDelimited de la façon suivante :\n\n  ##########\n  ENTETE : depute_code;nom_depute;prenom_depute;intitule_depute;groupe_politique      \n  SEPARATION : Point-Virgule      \n  NOM_FICHIER : depute_collaborateur.csv        \n  CIBLE : C:/workspace_talend/cible/depute/\n  NE PAS RETOURNER D'ERREUR SI LE FICHIER EXISTSE\n  ENCODAGE : UTF-8\n  CREER LE REPERTOIRE SI IL N'EXISTE PAS\n  ########## \n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n\n\n\n\n\n\n\nJOINTURE\n\n\n\n\n\n\n\nObjectif\n\n\n\nNous souhaitons avoir un fichier des collaborateurs des députés.\nPour cela nous allons réaliser une jointure entre le fichier des deputes et un fichier des collaborateurs.\n\n\n\nEtape 0 : Mettre à jour le job DL_DATA_DEPUTE en spécifiant une mineur 0.2 et ajoutant à la description le bloc suivant :\n\n##########                        \nDATE DE CREATION : {date_creation_1}             \nDATE DE MODIFICATION : {dd/MM/yyyy}               \nVERSION : 0.2              \nAUTEUR : {nom_prenom}              \nDESCRIPTION  : TELECHARGEMENT D'UN FICHIER SUPLLEMENTAIRE            \n##########        \nDATE DE CREATION : {date_creation_1}              \nDATE DE MODIFICATION :                \nVERSION : 0.1           \nAUTEUR : {nom_prenom}               \nDESCRIPTION  : CREATION DU JOB            \n##########\n\n\n\n\n\n\n\n\nUtilité des descriptions\n\n\n\nCes divers bloc sont là pour tracer les diverses évolutions que peut rencontrer un flux.\n\n\n\nEtape 2 : Dupliquer le composant tFileFetch avec pour paramétrage :\n\n##########                \nURL : https://data.assemblee-nationale.fr/static/openData/repository/16/amo/collaborateurs_csv_opendata/liste_collaborateurs_excel.csv\nMETHODE : GET \nNOM_FICHIER : collaborateur.csv\nCIBLE : C:/workspace_talend/source/depute/\n##########\n\nEtape 3 : Lier l’éxécution du composant nouvellement créé avec l’ancien, en cliquant droit sur le premier composant, puis choisir On Component Ok pour cliquer gauche sur le nouveau compissant\nEtape 4 : Renommer les composants :\n\ntFileFetch_1 en DL_DEPUTE\ntFileFetch_2 en DL_COLLAB\n\nEtape 5 : Executer le job et s’assurer de la bonne présence du fichier collaborateur.csv dans le dossier C:/workspace_talend/source/depute/\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEtape 2 : Modification READ_DATA_DEPUTE\n\nIl convient de mettre à jour le job READ_DATA_DEPUTE en spécifiant une mineur 0.2 et ajoutant à la description le bloc suivant :\n\n##########                \nDATE DE CREATION : REPRENDRE LA DATE DE CREATION DU BLOC PRECEDENT      \nDATE DE MODIFICATION : {dd/MM/yyyy}        \nVERSION : 0.2       \nAUTEUR : {nom_prenom}       \nDESCRIPTION  : JOINTURE AVEC LES COLLABARATEUR     \n########## \n\nCes divers bloc sont là pour tracer les diverses évolutions que peut rencontrer un flux.\nLa première chose à faire est de déterminer la structure du fichier.\nPour cela nous allons l’ouvrir avec Notepad :\n\n\nNous constatons le paramétrage:\n\n##########\nENTETE : Ligne 1       \nSEPARATION : Point-Virgule      \nNOM_FICHIER : colaborateur.csv        \nCIBLE : C:/workspace_talend/source/depute/\n##########\n\nAvec le schéma suivant :\n\nStructure du fichier\n\n\nNom du champ\nType\nNullable\n\n\n\n\nid (Identifiant du député)\nSTRING\nYES\n\n\nnom_depute\nSTRING\nYES\n\n\nprenom_depute\nSTRING\nYES\n\n\nnom_collab\nSTRING\nYES\n\n\nprenom_collab\nSTRING\nYES\n\n\n\nLa première ligne est l’identifiant du députés qui va nous permettre de faire la jointure entre les deux fichiers. Le prénom et le nom du députés sont déjà présent dans le fichier *deputes.csv, ainsi seul les informations du collaborateur vont être utile.\nMaintenant il convient d’apporter la modification suivante :\n\nLire le nouveau fichier avec le schéma\nFaire la jointure dans le tMap\nAjouter les champs liées au collaborateur en sortie et plus précisément un champ collab qui va prendre le nom et prénom du collaborateur :\n\nSoit row2 la sorie du composant tFileInputDelimited lié au fichier collaborateur.csv\nNous avons alors collab = row2.nom_collab + \" \" + row2.prenom_collab\n\nRenommer les composants Talend\n\n\n\nDans ce premier jet, la jointure n’a ramené aucune ligne parce que les valeurs des champs dans collaborateur.csv sont entourés par des double quote.\nIl convient donc de les supprimer afin que l’on est le même format entre l’id du député du fichier deputes.csv et l’id du député du fichier collaborateur.csv\n\n\nDans cette version, nous avons en entrée 578 députés et en sortie 577 ligne de couple député/collaborateur.\nCela n’est pas le résultat voulu, en effet un députés à au moins un collaborateur et souvent plus d’un.\nNéanmoins ce résultat est le signe d’une ligne d’un députés sans collaborateur\nNous allons donc récupérer l’ensemble des correspondance que l’on va écrire dans un fichier depute_collaborateur.csv et récupérer les collaborateur sans députés dans un fichier de rejet rejet_collaborateur.csv.\n\ndepute_collaborateur.csv :\n\n  ##########\n  ENTETE : intitule;collaborateur      \n  SEPARATION : Point-Virgule      \n  NOM_FICHIER : depute_collaborateur.csv        \n  CIBLE : C:/workspace_talend/cible/depute/ \n  ##########   \n\nrejet_collaborateur.csv :\n\n  ##########\n  ENTETE : intitule;collaborateur      \n  SEPARATION : Point-Virgule      \n  NOM_FICHIER : rejet_collaborateur.csv        \n  CIBLE : C:/workspace_talend/cible/depute/rejet\n  ##########    \n\n\n\n\nIl semblerait que la ligne en rejet ne possède aucune information.\nIl va falloir investiguer plus en détails le fichier des députés.\nNous pouvons observer un problème à la ligne 481 qui est en fait le fin de la ligne 480.\nIl faudrait mettre un processus de nettoyage de la données, cependant par économie de temps, nous allons considérer la correction manuelle suivante :\n\n\n\n\n\nEtape 3 : Création d’un fichier par groupe politique\n\nDans cette partie, nous allons utiliser le concept de variables globales ainsi que le principe d’itération.\nNous allons lire le fichier deputes.csv une première fois avec un composant tFileInputDelimited puis récupérer une ligne par groupe politique distinct grâce à un composant tUniqRow en utilisant le champ groupeAbrev pour ensuite la stocker dans une variable global groupe grâce à un composant tFlowToItererate dont la valeur peut être récupéré en faisant appel dans du code Java avec (String)globalMap.get(\"groupe\").\nA chaque itération, nous allons relire le fichier députes cependant pour ne pas perdre l’itération nous devons préalablement connecter ce nouveau tFileInputDelimited à un composant tJava en mode on Component OK lui-même lié au composant tFlowToItererate en mode Iterate .\nNous réaliserons la jointure mais également l’application d’un filtre en sortie de tel manière à ce qu’on ne considère que le groupe politique en question avec row1.groupeAbrev.equals((String)globalMap.get(\"groupe\")) dans un tMap afin de construire les fichiers :\n\ndepute_collaborateur_ + (String)globalMap.get(“groupe”) + “.csv :\n\n##########                \nENTETE : intitule;collab      \nSEPARATION : Point-Virgule      \nNOM_FICHIER : depute_collaborateur_ +  (String)globalMap.get(\"groupe\") + \".csv        \nCIBLE : C:/workspace_talend/cible/depute/      \n##########\n\nrejet_collaborateur_ + (String)globalMap.get(“groupe”) + “.csv :\n\n##########\nENTETE : nom_depute;prenom_depute;nom_collaborateur;prenom_collaborateur      \nSEPARATION : Point-Virgule      \nNOM_FICHIER : rejet_collaborateur_ +  (String)globalMap.get(\"groupe\") + \".csv        \nCIBLE : C:/workspace_talend/cible/depute/rejet \n##########"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#json-traitement-des-données-de-votes",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#json-traitement-des-données-de-votes",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "3.3 JSON – Traitement des données de votes",
    "text": "3.3 JSON – Traitement des données de votes\n\nTELECHARGEMENT DU FICHIER\n\nL’objectif ici est de télécharger le fichier source que nous allons utilisé par la suite.\nNous allons créer un job avec :\n\npour titre : DL_DATA_VOTE\n\npour objectif : Téléchargement d’un fichier de type json contenant les informations de vote\n\npour description le bloc suivant en remplaçant les {} par vos informations :\n\n##########                \nDATE DE CREATION : {dd/MM/yyyy}       \nDATE DE MODIFICATION :         \nVERSION : 0.1       \nAUTEUR : {nom_prenom}       \nDESCRIPTION  : CREATION DU JOB     \n##########\n\n\nPour effectuer le téléchargement, nous allons utilisé le composant tFileFetch qui peut être trouvé soit dans la palette à droite, soit en tapant directement tFileFetch n’importe où dans le quadrant nord-est.\nSoit le paramétrage suivant :\n\n  ##########\n  URL : \"http://data.assemblee-nationale.fr/static/openData/repository/16/loi/scrutins/Scrutins.json.zip\"       \n  METHODE : GET        \n  NOM_FICHIER : \"vote.zip\"        \n  CIBLE : \"C:/workspace_talend/source/vote/\" \n  ARRET EN CAS D'ERREUR\n  ##########\n\nNous devons maintenant extraire l’archive, pour cela nous pouvons utiliser un composant tFileUnarchive avec pour paramétrage suivant :\n\n  ##########                \n  FICHIER D'ARCHIVE : C:/workspace_talend/source/vote/vote.zip       \n  REPERTOIRE D'EXTRACTION  : C:/workspace_talend/source/vote/      \n  ##########\nLier l’éxécution du composant nouvellement créé avec l’ancien, en cliquant droit sur le premier composant, puis choisir On Component Ok\n\nA la fin vous devriez avoir une liste de fichier JSON dans le dossier :\nC:/workspace_talend/source/vote/json\n\n\n\n\n\nLECTURE DU FICHIER\n\nNous allons dans cette partie créer un second job qui va lire le fichier télécharger par le premier.\nNous allons créer un job avec :\n\npour titre : READ_DATA_VOTE\npour objectif : Lecture d’un fichier de type json contenant les informations des députés et dans la description\npour description le bloc suivant en remplaçant les {} par vos informations :\n\n##########                \nDATE DE CREATION : {dd/MM/yyyy}       \nDATE DE MODIFICATION :         \nVERSION : 0.1       \nAUTEUR : {nom_prenom}       \nDESCRIPTION  : CREATION DU JOB       \n##########\n\n\nLa première chose à faire est de déterminer la structure du fichier ou plutôt d’un fichier quelconque. Nous souhaitons récupérer :\n\nL’ensemble des votes POUR dont les identifiants de ces votants sont présent dans l’élément acteurRef dans le noeud :\n\nscrutin/ventilationVotes/organe/groupes/groupe/vote/decompteNominatif/pours/votant/\n\nL’ensemble des votes CONTRE dont les identifiants de ces votants sont présent dans l’élément acteurRef dans le noeud :\n\nscrutin/ventilationVotes/organe/groupes/groupe/vote/decompteNominatif/contres/votant/\n\n\nNous allons malheureusement définir deux metada pour le même fichier, en effet Talend ne gère qu’une boucle, or nous avons besoin de boucler sur les POUR, mais également les CONTRES.\n\n\nNous allons donc lire le même fichier avec un composant tFileInputJSON mais selon deux metadata différentes pour ensuite ajouter via un composant tJavaRow un champ vote_code avec pour valeur :\n\n1 si le députés est dans le noeud POUR\n0 si le députés est dans le noeud CONTRE.\n\nNous allons ensuite réunir les deux jeux de données dans un composant tUnite avant d’écrire un fichier unique\n\nvote.csv :\n\n##########\nENTETE : Ligne 1       \nSEPARATION : Point-Virgule      \nNOM_FICHIER : vote.csv     \nCIBLE : C:/workspace_talend/cible/vote/\n##########\n\n\n\n\n\n\n\nCREATION D’UN FICHIER GLOBAL DE VOTE\n\nLe problème avec le flux précédent est que nous avons uniquement fait un traitement pour un fichier de la liste.\nAinsi il va falloir pour chaque fichier de la liste faire cette action.\n\nLister les fichier du répertoire C:/workspace_talend/source/vote/json avec un composant tFileList avec pour recherche le pattern *.json\nLier ce composant avec un composant tJava en mode Iterate\nLier le composant tJava au sous-job précédemment développer avec un lien On Component OK\nMettre à jour les composants tFileInputJSON en modifiant le fichier à lire par la variable globale ((String)globalMap.get(\"tFileList_1_CURRENT_FILEPATH\"))issus du composant tFileList\nAjouter un champ loi_code avec pour valeur ((String)globalMap.get(\"tFileList_1_CURRENT_FILE\")) issus du composant tFileList\nMettre à jour le schéma des composant tUnite et tFileOutputDelimited afin de considérer le nouveau champ loi_code\nMettre à jour le composant tFileOutputDelimited afin d’écrire les données à la suite du fichier existant"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#postgresql-alimentation-de-la-base-de-données",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#postgresql-alimentation-de-la-base-de-données",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "3.4 POSTGRESQL – Alimentation de la base de données",
    "text": "3.4 POSTGRESQL – Alimentation de la base de données\n\nNous allons dans la suite créer un job ALIM_BDD_OPENDATA_ASSEMBLEE_NATIONALE en nous inspirant des jobs :\n\nREAD_DATA_DEPUTE\n\nREAD_DATA_VOTE\n\nL’idée est de remplacer la cible qui à la place d’être des fichiers vont être des tables.\nNous souhaitons obtenir le MPD suivant :\n\n\n\n\nerDiagram\n    COLLAB ||--|{ DEPUTE : rattachement \n    COLLAB {\n        integer collab_code PK \"sequence incremental pour chaque depute_code\"\n        string depute_code PK \"id du fichier collaborateur\" \n        string nom_collab  \"nom_collab du fichier collaborateur avec MAJUSCULE & TRIM\" \n        string prenom_collab  \"prenom_collab du fichier collaborateur avec MAJUSCULE & TRIM\"\n        string intitule_collab \"nom_collab + prenom_collab du fichier collaborateur avec MAJUSCULE & TRIM\"\n    }\n    DEPUTE }o--|{ VOTE : vote\n    DEPUTE {\n       string depute_code PK \"id du fichier deputes\"\n       string nom_depute  \"nom du fichier depute avec MAJUSCULE & TRIM\"\n       string prenom_depute  \"prenom du depute collaborateur avec MAJUSCULE & TRIM\"\n       string intitule_depute  \"prenom du fichier depute avec MAJUSCULE & TRIM\"\n       string groupe_politique  \"prenom du fichier depute avec MAJUSCULE & TRIM\"\n\n    }\n    VOTE {\n      string depute_code PK \"champ depute_code des fichiers de *.json\"\n      string loi_code PK \"nom du fichier du fichier de vote\"\n      integer vote_code \"champ construit dans le job READ_DATA_VOTE\"\n  }\n\n\n\n\n\n\n\nCREATION DE LA BDD\n\nAvant de créer les tables, il convient de créer une base de données ainsi qu’un schéma dans lesquels nous allons construire nos différentes tables.\nPour cela, il convient d’ouvrir PgAdmin, puis de construire une database avec pour nom OPENDATA_ASSEMBLEE_NATIONALE et un schema avec pour nom dwh :\nCela peut être réalisé via les commandes suivantes :\nDROP DATABASE IF EXISTS \"OPENDATA_ASSEMBLEE_NATIONALE\";\n\nCREATE DATABASE \"OPENDATA_ASSEMBLEE_NATIONALE\"\n    WITH \n    OWNER = postgres\n    ENCODING = 'UTF8'\n    LC_COLLATE = 'French_France.1252'\n    LC_CTYPE = 'French_France.1252'\n    TABLESPACE = pg_default\n    CONNECTION LIMIT = -1;\n\nCOMMENT ON DATABASE \"OPENDATA_ASSEMBLEE_NATIONALE\"\n    IS 'Base de données contenant les informations issus de l'OpenData de l'Assemblée Nationale';\n    \nDROP SCHEMA IF EXISTS dwh ;\n\nCREATE SCHEMA IF NOT EXISTS dwh\n    AUTHORIZATION postgres;\nMaitenant que nous avons une BDD ainsi qu’un schéma, nous pouvons créer les différentes tables :\n\nTable DEPUTE :\n\n\nCREATE TABLE dwh.\"DEPUTE\" (\n    depute_code varchar(20) NOT NULL,\n    nom_depute varchar(250) NULL,\n    prenom_depute varchar(250) NULL,\n    intitule_depute varchar(250) NULL,\n    groupe_politique varchar(250) NULL\n\n);\n\nTable COLLAB :\n\n\nCREATE TABLE dwh.\"COLLAB\" (\n  collab_code integer NOT NULL,\n  depute_code varchar(20) NOT NULL,\n  nom_collab varchar(250) NULL,\n  prenom_collab varchar(250) NULL,\n  intitule_collab varchar(250) NULL\n);\n\nTable VOTE :\n\n\nCREATE TABLE dwh.\"VOTE\" (\n    depute_code varchar(20) NOT NULL,\n    loi_code varchar(250) NOT NULL,\n    vote_code  integer NOT NULL\n);\n\n\n\nALIMENTATION DE LA BDD\n\nNous allons créer un job avec :\n\npour titre : ALIM_BDD_OPENDATA_ASSEMBLEE_NATIONALE\npour objectif : Alimentation de la BDD OPENDATA_ASSEMBLEE_NATIONALE\npour description le bloc suivant en remplaçant les {} par vos informations :\n\n##########                \nDATE DE CREATION : {dd/MM/yyyy}       \nDATE DE MODIFICATION :         \nVERSION : 0.1       \nAUTEUR : {nom_prenom}       \nDESCRIPTION  : CREATION DU JOB       \n##########\n\n\n\nNous réaliserons les étapes suivantes pour l’alimentation de la table VOTE:\n\nParamétrer la connexion à la BDD avec un composant tPostrgreSQLConnection avec pour paramétrage :\n\n##########\nHOST : localhost      \nBDD : OPENDATA_ASSEMBLEE_NATIONALE      \nPORT : 5432   \nSCHEMA : dwh\nPARAMETRES AVANCE : COMMIT AUTOMATIQUE\n##########\n\nCopier l’ensemble du l’ensemble du job READ_DATA_VOTE qu’on lit au composant tPostrgreSQLConnection avec un lien On Component OK\nChanger la cible tFileOutputDelimited par un composant tPostrgreSQLOutput avec pour paramètrage :\n\n##########\nUTILISER LA CONNEXION\nTABLE : VOTE\nACTION SUR LA TABLE : DEFAUT\nACTION SUR LES DONNES : INSERT OU UPDATE\n##########\n\n\nAvec le schéma suivant :\n\n\n\nNom du champ\nType\nNullable\nKEY\n\n\n\n\ndepute_code\nSTRING\nNO\nYES\n\n\nloi_code\nSTRING\nNO\nYES\n\n\nvote_code\nINTEGER\nNO\nNO\n\n\n\n\n\n\nNous réaliserons les étapes suivantes pour l’alimentation de la table DEPUTE et de la table COLLAB:\n\n\nCopier et coller le sous-job du job READ_DATA_DEPUTE lié à la jointure et à l’alimentation des fichiers deputes.csv\nLier le sous-job d’alimentation de la table VOTE à ce nouveau job\nChanger le tMap afin de réaliser le mapping suivant :\n\n\nMapping DEPUTE\n\n\n\n\n\n\n\nNom du source\nNom du champ cible\nFonction\n\n\n\n\ndepute_code\nrow1.id\n/\n\n\nnom_depute\nrow1.nom\nTRIM & MAJ\n\n\nprenom_depute\nrow1.prenom\nTRIM & MAJ\n\n\nintitule_depute\nrow1.civ + ” ” + row1.nom + ” ” + row1.prenom\nTRIM & MAJ\n\n\ngroupe_politique\nrow1.groupeAbrev\nTRIM & MAJ\n\n\n\n\nAjouter un composant tUniqRow en sortie DEPUTE du tMap avec pour identifiant unique l’attribut depute_code\n\nMettre en sortie un composant tPostrgreSQLOutput pour la sortie DEPUTE avec pour paramètrage :\n\n##########\nUTILISER LA CONNEXION\nTABLE : DEPUTE\nACTION SUR LA TABLE : SUPPRIMER SI ELLE EXISTE ET LA CREER\nACTION SUR LES DONNES : INSERT\n##########\n\n\nAvec le schéma suivant :\n\n\n\nNom du champ\nType\nNullable\nKEY\n\n\n\n\ndepute_code\nSTRING\nNO\n\n\n\nnom_depute\nSTRING\nYES\n\n\n\nprenom_depute\nSTRING\nYES\n\n\n\nintitule_depute\nSTRING\nYES\n\n\n\ngroupe_politique\nSTRING\nYES\n\n\n\n\n\nChanger le tMap afin de réaliser le mapping suivant :\n\n\nMapping COLLAB\n\n\n\n\n\n\n\nNom du source\nNom du champ cible\nFonction\n\n\n\n\ncollab_code\nrow1.id\nNumeric.sequence()\n\n\ndepute_code\nrow1.id\n/\n\n\nnom_collab\nrow2.nom_collab\nTRIM & MAJ\n\n\nprenom_collab\nrow2.prenom_collab\nTRIM & MAJ\n\n\nintitule_collab\nrow2.nom_collab + ” ” + row2.prenom_collab\nTRIM & MAJ\n\n\n\n\nMettre en sortie un composant tPostrgreSQLOutput pour la sortie COLLAB avec pour paramètrage :\n\n##########\nUTILISER LA CONNEXION\nTABLE : COLLAB\nACTION SUR LA TABLE : SUPPRIMER SI ELLE EXISTE ET LA CREER\nACTION SUR LES DONNES : INSERT\n##########\n\n\nAvec le schéma suivant :\n\n\n\nNom du champ\nType\nNullable\nKEY\n\n\n\n\ncollab_code\nSTRING\nNO\n\n\n\ndepute_code\nSTRING\nNO\n\n\n\nnom_collab\nSTRING\nYES\n\n\n\nprenom_collab\nSTRING\nYES\n\n\n\nintitule_collab\nSTRING\nYES\n\n\n\n\n\n\n\n\nRECETTE DE LA BDD\n\nDans cette partie, nous allons nous assurer que le job fonctionne bien.\nPour cela nous allons utiliser DBeaver.\n\n\n\n\n\n\nNote\n\n\n\nNous aurions pus nous contenter de PgAdmin cependant cette outils ne permet d’interagir qu’avec des base de données de type PostgreSQL, là où DBeaver permet d’interagir avec un grand nombre d’autre type.\n\n\n\nOuvrir Dbeaver\nCréer un dossier OPENDATA_ASSEMBLEE\nCréer une connexion PostgreSQL à la BDD OPENDATA_ASSEMBLEE_NATIONALE\nDouble-cliquer sur les tables afin de visualiser les données"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#rest-récupération-des-informations-liés-à-un-députés",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#rest-récupération-des-informations-liés-à-un-députés",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "3.5 REST – Récupération des informations liés à un députés",
    "text": "3.5 REST – Récupération des informations liés à un députés\n\nSource : TUNISIA (2020)\n\n\nCREATION D’UNE REQUETE\n\n\n\n\n\nCREATION D’UNE API\n\nNous allons maintenant créer le service REST. Pour cela, créer un nouveau job, qu’on appellera GETINFO_OPENDATA_ASSEMBLEE_NATIONALE, puis glisser les composants suivants:\n\ntPostgreSQLConnection : Pour définir la connexion à la BDD OPENDATA_ASSEMBLEE_NATIONALE\ntRestRequest : Pour définir la requête REST que le client doit appeler\ntPostgreSQLInput : Table de la base de données\n\n\n\n\n\n\n\nNote\n\n\n\nJe choisis tPostgreSQLInput car, dans mon cas, c’est une base de données PostgreSQL, et je veux juste lire son contenu, je vais donc y accéder en entrée (d’où le Input).\n\n\n\ntFlowToIterate : Pour effectuer une itération sur les données d’entrée et génèrer des variables globales.\ntXMLMap : Permet de router et transformer les flux entrants de la base de données vers le résultat de la requête.\ntRestResponse : Pour définir la réponse à envoyer à l’utilisateur suite à sa requête.\ntLogRow : Pour le log, bien sûr.\n\nLe job aura l’allure suivante:\n\n\n\nService REST\n\n\nNous désirons configurer le service de manière à ce que, quand un consommateur appelle l’URI http://localhost:8088/depute?depute_code=param avec pour param, un identifiant de depute, le service retourne une réponse contenant les informations du député dont une liste des collaborateur.\n\nConfiguration de tRestRequest\ntRestRequest devra être configuré comme suit:\n\nLa valeur de Endpoint URL devra être: \"http://localhost:8088/depute\"\nSi vous avez connecté le tRestRequest avec le tFlowToIterate avec un lien appelé getDepute, vous devriez le retrouver dans la case REST API Mapping. Sinon, créez-le.\nGarder les informations par défaut de ce mapping (méthode GET, URI /, Produit XML ou JSON).\nEn cliquant sur getDepute, un bouton avec trois petits points apparaît. Cliquez dessus.\nAjouter les deux colonnes depute_code représentant le paramètre de la requête. Prenez soin à ce que:\n\nSon type soit string\nLa valeur par défaut soit de PA722142 .\nLeur commentaire ait la valeur: query\n\n\n\n\n\n\n\n\nNote\n\n\n\nLa valeur par défaut est utilisée dans le cas où le consommateur n’introduit pas de paramètres.\n\n\n\n\n\n\n\n\nNote\n\n\n\nLe commentaire query indique que ce champ est un paramètre de requête, pas définie dans le Path.\n\n\n\n\n\nConfiguration de depute\n\nPuisque le composant depute a été créé à partir de la connexion à votre base PostgreSQL, il contient déjà les informations de connexion nécessaires.\nIl suffira dans notre cas de:\n\nCliquer sur Guess Schema pour charger le schéma de la base.\nChanger la requête pour qu’elle soit comme suit:\n\nSELECT \n\n  D.depute_code,\n  D.nom_depute,\n  D.prenom_depute,\n  D.intitule_depute ,\n  D.groupe_politique,\n  C.collab_code,\n  C.nom_collab,\n  C.prenom_collab,\n  C.intitule_collab,\n  V.loi_code,\n  V.vote_code\n  \nFROM \"DEPUTE\" D\n\nINNER JOIN \"COLLAB\" C\nON D.depute_code = C.depute_code\n\nWHERE D.depute_code IN (\"+ globalMap.get(\"getDepute.depute_code\") + \")\n\n\n\n\n\n\nNote\n\n\n\nglobalMap est une variable globale permettant de stocker les informations de la requête, comme par exemple ses paramètres.\n\n\n\n\n\nConfiguration de tXMLMap\n\nCliquer deux fois sur la tXMLMap pour la configurer.\n\nDans la colonne de droite, ajouter (si ce n’est déjà fait) une colonne intitulée body dont le type est Document.\nCette colonne contient un élément root. Renommer cet élément pour députés.\nAjouter un sous-élément à deputes appelé depute\nGlisser-déplacer le depute_code de la colonne en entrée vers le depute. Créez-le comme attribut du noeud cible.\nDe même pour le prenom_depute,prenom_depute,groupe_politique,intitule_depute, qui seront, eux, des sous-éléments du noeud depute.\nAjouter un sous-élément à collaborateurs appelé collaborateur.\nDéfinir cet élément comme loop Element.\nGlisser-déplacer le collab_code de la colonne en entrée vers le collaborateur. Créez-le comme attribut du noeud cible.\nDe même pour le prenom_collab,prenom_collab,intitule_collab, qui seront, eux, des sous-éléments du noeud collaborateur.\nDans la colonne de droite, cliquer sur la petite clef à molette (). Mettre la valeur de “All in one” à true. Cela permettra à toutes les données XML d’être écrites dans un seul flux.\n\nLa configuration finale sera donc comme suit:\n\n\n\ntXMLMap du Service REST\n\n\n\n\n\n\n\n\nNote\n\n\n\nLa configuration précédente va générer une réponse de la forme suivante:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;deputes&gt;\n    &lt;depute depute_code=\"PA795596\"&gt;\n        &lt;nom_depute&gt;VANNIER&lt;/nom_depute&gt;\n        &lt;prenom_depute&gt;PAUL&lt;/prenom_depute&gt;\n        &lt;intitule_depute&gt;M. VANNIER PAUL&lt;/intitule_depute&gt;\n        &lt;groupe_politique&gt;LFI-NUPES&lt;/groupe_politique&gt;\n        &lt;collaborateurs&gt;\n            &lt;collaborateur collab_code=\"1\"&gt;\n                &lt;nom_collab&gt;MARZOUGUI&lt;/nom_collab&gt;\n                &lt;prenom_collab&gt;ANIS&lt;/prenom_collab&gt;\n                &lt;intitule_collab&gt;MARZOUGUI ANIS&lt;/intitule_collab&gt;\n            &lt;/collaborateur&gt;\n            &lt;collaborateur collab_code=\"2\"&gt;\n                &lt;nom_collab&gt;FOUCAULT&lt;/nom_collab&gt;\n                &lt;prenom_collab&gt;CLÉMENCE&lt;/prenom_collab&gt;\n                &lt;intitule_collab&gt;FOUCAULT CLÉMENCE&lt;/intitule_collab&gt;\n            &lt;/collaborateur&gt;\n            &lt;collaborateur collab_code=\"3\"&gt;\n                &lt;nom_collab&gt;AWAD ABDOU&lt;/nom_collab&gt;\n                &lt;prenom_collab&gt;MOHAMED&lt;/prenom_collab&gt;\n                &lt;intitule_collab&gt;AWAD ABDOU MOHAMED&lt;/intitule_collab&gt;\n            &lt;/collaborateur&gt;\n        &lt;/collaborateurs&gt;\n    &lt;/depute&gt;\n&lt;/deputes&gt;\n\n\nLes autres composants devront rester tels qu’ils sont par défaut. Il suffira maintenant de lancer le service, en cliquant sur Exécuter.\n\n\n\n\nCONSOMMATEUR DU WEBSERVICE\n\nPour tester le service, il suffit d’ouvrir un navigateur, et de taper la requête de votre choix.\nPar exemple, la requête suivante : http://localhost:8088/depute?depute_code=PA795596 donnera:\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;deputes&gt;\n    &lt;depute depute_code=\"PA795596\"&gt;\n        &lt;nom_depute&gt;VANNIER&lt;/nom_depute&gt;\n        &lt;prenom_depute&gt;PAUL&lt;/prenom_depute&gt;\n        &lt;intitule_depute&gt;M. VANNIER PAUL&lt;/intitule_depute&gt;\n        &lt;groupe_politique&gt;LFI-NUPES&lt;/groupe_politique&gt;\n        &lt;collaborateurs&gt;\n            &lt;collaborateur collab_code=\"1\"&gt;\n                &lt;nom_collab&gt;MARZOUGUI&lt;/nom_collab&gt;\n                &lt;prenom_collab&gt;ANIS&lt;/prenom_collab&gt;\n                &lt;intitule_collab&gt;MARZOUGUI ANIS&lt;/intitule_collab&gt;\n            &lt;/collaborateur&gt;\n            &lt;collaborateur collab_code=\"2\"&gt;\n                &lt;nom_collab&gt;FOUCAULT&lt;/nom_collab&gt;\n                &lt;prenom_collab&gt;CLÉMENCE&lt;/prenom_collab&gt;\n                &lt;intitule_collab&gt;FOUCAULT CLÉMENCE&lt;/intitule_collab&gt;\n            &lt;/collaborateur&gt;\n            &lt;collaborateur collab_code=\"3\"&gt;\n                &lt;nom_collab&gt;AWAD ABDOU&lt;/nom_collab&gt;\n                &lt;prenom_collab&gt;MOHAMED&lt;/prenom_collab&gt;\n                &lt;intitule_collab&gt;AWAD ABDOU MOHAMED&lt;/intitule_collab&gt;\n            &lt;/collaborateur&gt;\n        &lt;/collaborateurs&gt;\n    &lt;/depute&gt;\n&lt;/deputes&gt;\nSi aucun paramètre n’est indiqué: http://localhost:8088/depute cela donnera:\n&lt;depute depute_code=\"PA722142\"&gt;\n    &lt;nom_depute&gt;RUFFIN&lt;/nom_depute&gt;\n    &lt;prenom_depute&gt;FRANÇOIS&lt;/prenom_depute&gt;\n    &lt;intitule_depute&gt;M. RUFFIN FRANÇOIS&lt;/intitule_depute&gt;\n    &lt;groupe_politique&gt;LFI-NUPES&lt;/groupe_politique&gt;\n    &lt;collaborateurs&gt;\n        &lt;collaborateur collab_code=\"1\"&gt;\n            &lt;nom_collab&gt;LAPORTE&lt;/nom_collab&gt;\n            &lt;prenom_collab&gt;SYLVAIN&lt;/prenom_collab&gt;\n            &lt;intitule_collab&gt;LAPORTE SYLVAIN&lt;/intitule_collab&gt;\n        &lt;/collaborateur&gt;\n        &lt;collaborateur collab_code=\"2\"&gt;\n            &lt;nom_collab&gt;BOURRIÉ&lt;/nom_collab&gt;\n            &lt;prenom_collab&gt;DIMITRI&lt;/prenom_collab&gt;\n            &lt;intitule_collab&gt;BOURRIÉ DIMITRI&lt;/intitule_collab&gt;\n        &lt;/collaborateur&gt;\n        &lt;collaborateur collab_code=\"3\"&gt;\n            &lt;nom_collab&gt;GALÈS&lt;/nom_collab&gt;\n            &lt;prenom_collab&gt;ALEXIS&lt;/prenom_collab&gt;\n            &lt;intitule_collab&gt;GALÈS ALEXIS&lt;/intitule_collab&gt;\n        &lt;/collaborateur&gt;\n        &lt;collaborateur collab_code=\"4\"&gt;\n            &lt;nom_collab&gt;PLAZA&lt;/nom_collab&gt;\n            &lt;prenom_collab&gt;LOU&lt;/prenom_collab&gt;\n            &lt;intitule_collab&gt;PLAZA LOU&lt;/intitule_collab&gt;\n        &lt;/collaborateur&gt;\n    &lt;/collaborateurs&gt;\n&lt;/depute&gt;\n&lt;/deputes&gt;\nIl est possible de tester votre service REST avec POSTMAN qui vous permettra de créer des collections d’appels API :\n\nLancer POSTMAN\nCréer un WORKSPACE avec :\n\npour titre : OPENDATA_ASSEMBLEE_NATIONALE\npour description : Collection d’API lié à l’Open Data de l’Assemblée Nationale en mode Private\n\nCréer une collection COLLECTION_1\nCréer un appel GET_DEPUTE\nEntrer l’URI que vous désirez tester: http://localhost:8088/depute?depute_code=PA795596\nCliquer sur SEND. Le résultat devra ressembler au suivant:\n\n\nPour créer un consommateur pour le web service REST avec Talend, il suffit de créer le Job suivant:\n\nConfigurer le tRestClient comme suit:\n\n\n\nConfiguration du consommateur REST\n\n\nExécuter. Le résultat devrait ressembler à ceci:\n\n\n\nRésultat du consommateur REST"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#variable-et-groupe-de-contexte",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#variable-et-groupe-de-contexte",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "4.1 Variable et groupe de contexte",
    "text": "4.1 Variable et groupe de contexte\n\nNotion de réutilisation et de différentiation selon l’environnement permet des livraisons dans un autres environnement sans avoir à modifier toute les valeurs en dures\n\n\nVARIABLE DE DIR\n\n\nVARIABLE DE BDD\n\n\nVARIABLE GLOBAL"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#log",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#log",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "4.2 Log",
    "text": "4.2 Log\n\nPermet de savoir ce qu’il se passe, d’identifier les probleme afin d’avoir une meilleur maitenance et suivie?\n\n\nLOG DE DEBUT ET FIN DE TRAITEMENT\n\n\nLOG D’ERREUR\n\n\nLOG D’INFORMATION"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#règle-de-nommage-et-esthétique",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#règle-de-nommage-et-esthétique",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "4.3 Règle de nommage et esthétique",
    "text": "4.3 Règle de nommage et esthétique\n\nPermet la compréhension par un autre dévellopeur\n\n\nNOMMAGE DES COMPOSANTS\n\n\nNOMMAGE DES LIENS\n\n\nNOMMAGE DES SOUS_JOBS"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#construction-du-job",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#construction-du-job",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "5.1 Construction du job",
    "text": "5.1 Construction du job\n\nCONSTRUCTION AVEC GROUPE DE CONTEXTE DE QUAL\n\n\nCONSTRUCTION API\n\n\nFILEZILLA"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#déploiement-et-unix",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#déploiement-et-unix",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "5.2 Déploiement et Unix",
    "text": "5.2 Déploiement et Unix\n\nLANCEMENT SCRIPT\n\n\nCHAINE CRON & ORDONNACEMENT\n\n\nMAILTO"
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html#developement-collaboratif-avec-git",
    "href": "posts/formation_talend/quarto_document_formation_talend.html#developement-collaboratif-avec-git",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "5.3 Developement collaboratif avec Git",
    "text": "5.3 Developement collaboratif avec Git\n\nSource : DROUSIE (2021)\nIl est bien connu que la version Open Source de Talend, Talend Open Studio est mono-poste, c’est-à-dire qu’elle ne permet pas le travail collaboratif intégré à l’outil. Pour cela, il faut se diriger vers les solutions entreprises.\nPourtant, avec un minimum d’esprit de développeur, il est possible de mettre manuellement les sources Talend sur Git.\nEn effet, les jobs,métadonnées, contextes crées dans Talend sont stockés sous forme de fichiers dans un répertoire spécifique, appelé workspace (cette terminologie parlera bien sûr aux développeurs habitués à Eclipse).\nTout fichier pouvant être versionné sur Git, rien n’empêche donc une mise sous contrôle Git de notre travail Talend.\n\n\nINSTALLATION GIT\n\nInstallez le client GIT adapté à votre système d’exploitation, avec les options par défaut (cliquez sur Next à chaque fois).\nLien git\n\n\n\nINITIALISATION PROJET\n\nCréation d’un projet en local et publication sur le GIT\nSuivez les étapes dans l’ordre :\n\nDémarrez Talend Open Studio en tant qu’administrateur\nCréez un projet dans votre workspace (celui par défaut se trouve dans le dossier du Studio)\nCréez un job, un contexte, une métadonnée ou tout autre élément, puis enregistrez et quittez le projet\nDans BitBucket, créez un projet puis un dépôt (repository) à l’intérieur avec un fichier README.md par défaut, et enfin récupérez le lien HTTPS (ou SSH si vous avez paramétré une clé SSH) du dépôt\nOuvrez le client GIT et placez-vous au niveau du workspace\nConfigurez le GIT avec vos identifiants Bitbucket (dans le cas de l’utilisation d’un lien HTTPS)\n\ngit config --global user.name \"q_drousie\"\ngit config --global user.email quentin.drousie@daka-tec.com\n\nInitialisez le repo GIT avec la commande\n\ngit init\n\nCréez un fichier .gitignore à la racine du workspace en exécutant la commande\n\nvim .gitignore\n\nAjoutez le contenu suivant à personnaliser selon le nom de votre projet\n\n**/jobInfo.properties\n.JETEmitters/\n.Java/\n.metadata/\nPROJET/code/routines/system/*.*\nPROJET/temp/\nPROJET/sqlPatterns/\nPROJET/talend.project\nDans mon exemple, le contenu est\n**/jobInfo.properties\n.JETEmitters/\n.Java/\n.metadata/\nCOMMON/code/routines/system/*.*\nCOMMON/temp/\nCOMMON/sqlPatterns/\nCOMMON/talend.project\n\nAjoutez le lien (HTTPS ou SSH, voir plus haut) au dépôt\n\ngit remote add origin https://q_drousie@bitbucket.org/dakatec\nMettez à jour vos sources avec la commande\ngit pull origin master\nAjoutez vos modifications en cache avec la commande\ngit add .\n\nCommittez vos modifications avec un commentaire avec la commande\n\n\ngit commit -m \"Votre commentaire\"\n\nPubliez les modifications sur le GIT avec la commande\n\ngit push origin master\n\nSur BitBucket, dans le projet talend et le dépôt talend se trouve désormais un dossier COMMON (nom technique du projet Talend)\n\n\n\nRécupération en local d’un projet versionné sur le GIT\nSuivez les étapes dans l’ordre :\n\nCréez un workspace sur votre poste, à l’emplacement de votre choix\n\n\nC:\\Users\\quent\\Documents\\DAKA-Tec\\Outils\\Talend\\workspace\n\nOuvrez le client GIT et placez-vous au niveau du répertoire nouvellement créé\n\ncd \"C:\\Users\\quent\\Documents\\DAKA-Tec\\Outils\\Talend\\workspace\"\n\nConfigurez le GIT avec vos identifiants Bitbucket (dans le cas de l’utilisation d’un lien HTTPS)\n\n\ngit config --global user.name \"q_drousie\"\ngit config --global user.email quentin.drousie@daka-tec.com\nSur BitBucket, récupérez le lien HTTPS (ou SSH si vous avez paramétré une clé SSH) du dépôt - Dans mon exemple, le lien HTTPS du dépôt est\nhttps://q_drousie@bitbucket.org/dakatec/talend.git\n\nClonez le dépôt dans le dossier workspace\n\ngit clone https://q_drousie@bitbucket.org/dakatec/talend.git\n\nVérifiez que le dépôt a bien été rapatrié\n\n\nC:\\Users\\quent\\Documents\\DAKATec\\Outils\\Talend\\workspace\\talend\n\nDémarrez Talend Open Studio en tant qu’administrateur\n\nChangez le workspace au démarrage pour pointer vers le workspace que vous avez créé et alimenté dans les étapes précédentes (avec le au bout) et redémarrez Talend Open Studio\n\nCréez un nouveau projet portant exactement le même nom que celui publié sur le GIT (dossier se trouvant à la racine du dépôt)\n\n\n\n\nCYCLE DE VIE PROJET\n\nRécupération en local de la dernière version d’un projet GIT\nSi vous avez déjà récupéré le projet en local et que vous souhaitez de nouveau développer dessus, il faut impérativement que vous mettiez à jour vos sources au préalable.\nOuvrez le client GIT et exécutez les commandes\ngit config --global user.name \"q_drousie\"\ngit config --global user.email quentin.drousie@daka-tec.com\ncd \"Votre workspace\"\ngit remote add origin url_distante_de_votre_projet\ngit pull origin master\n\n\nPublication sur le GIT de la dernière version d’un projet en local\nUne fois la dernière version du projet GIT récupéré en local et les développements effectués, poussez votre travail en retour sur le GIT.\nOuvrez le client GIT et exécutez les commandes\ngit config --global user.name \"q_drousie\"\ngit config --global user.email quentin.drousie@daka-tec.com\ncd \"Votre workspace\"\ngit add .\ngit commit -m \"Résumé de votre travail\"\ngit remote add origin url_distante_de_votre_projet\ngit push origin master"
  },
  {
    "objectID": "posts/tidytuesday_20240804/tidytuesday_20240804.html",
    "href": "posts/tidytuesday_20240804/tidytuesday_20240804.html",
    "title": "Analyse de données - TidyTuesday",
    "section": "",
    "text": "This week we’re exploring “summer” movies: movies with “summer” in their title!\nThe data this week comes from the Internet Movie Database. We don’t have an article using exactly this dataset, but you might get inspiration from IMDb’s 2023 Summer Movie Guide.\n\n\n# Option 1: tidytuesdayR package \n## install.packages(\"tidytuesdayR\")\n\ntuesdata &lt;- tidytuesdayR::tt_load('2024-07-30')\n## OR\ntuesdata &lt;- tidytuesdayR::tt_load(2024, week = 31)\n\nsummer_movie_genres &lt;- tuesdata$summer_movie_genres\nsummer_movies &lt;- tuesdata$summer_movies\n\n# Option 2: Read directly from GitHub\n\nsummer_movie_genres &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-30/summer_movie_genres.csv')\nsummer_movies &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-30/summer_movies.csv')\n\n\n\n\nExplore the data, watching out for interesting relationships. We would like to emphasize that you should not draw conclusions about causation in the data. There are various moderating variables that affect all data, many of which might not have been captured in these datasets. As such, our suggestion is to use the data provided to practice your data tidying and plotting techniques, and to consider for yourself what nuances might underlie these relationships.\nCreate a visualization, a model, a shiny app, or some other piece of data-science-related output, using R or another programming language.\nShare your output and the code used to generate it on social media with the #TidyTuesday hashtag."
  },
  {
    "objectID": "posts/tidytuesday_20240804/tidytuesday_20240804.html#the-data",
    "href": "posts/tidytuesday_20240804/tidytuesday_20240804.html#the-data",
    "title": "Analyse de données - TidyTuesday",
    "section": "The Data",
    "text": "The Data\n# Option 1: tidytuesdayR package \n## install.packages(\"tidytuesdayR\")\n\ntuesdata &lt;- tidytuesdayR::tt_load('2024-07-30')\n## OR\ntuesdata &lt;- tidytuesdayR::tt_load(2024, week = 31)\n\nsummer_movie_genres &lt;- tuesdata$summer_movie_genres\nsummer_movies &lt;- tuesdata$summer_movies\n\n# Option 2: Read directly from GitHub\n\nsummer_movie_genres &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-30/summer_movie_genres.csv')\nsummer_movies &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-30/summer_movies.csv')"
  },
  {
    "objectID": "posts/tidytuesday_20240804/tidytuesday_20240804.html#how-to-participate",
    "href": "posts/tidytuesday_20240804/tidytuesday_20240804.html#how-to-participate",
    "title": "Analyse de données - TidyTuesday",
    "section": "How to Participate",
    "text": "How to Participate\n\nExplore the data, watching out for interesting relationships. We would like to emphasize that you should not draw conclusions about causation in the data. There are various moderating variables that affect all data, many of which might not have been captured in these datasets. As such, our suggestion is to use the data provided to practice your data tidying and plotting techniques, and to consider for yourself what nuances might underlie these relationships.\nCreate a visualization, a model, a shiny app, or some other piece of data-science-related output, using R or another programming language.\nShare your output and the code used to generate it on social media with the #TidyTuesday hashtag.\n\n\nData Dictionary"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GOLLENTZ Quentin, Artisan de la Data depuis 1994",
    "section": "",
    "text": "Bonjour à vous,\nNée le 25 Juillet 1994 à Guebwiller.\nTitulaire d’un Master Économétrie & Statistique, obtenu en 2018 à l’Université de Strasbourg.\nDe par mon expérience professionnelle, j’ai acquis des compétences dans l’univers de la DATA et plus particulièrement celles liés au rôle d’INGÉNIEUR DATA.\nPassionné par la science des données avec pour domaine d’application de prédilection :\nL’OpenData de l’Assemblée Nationale.\nMon leitmotiv est depuis lors la création d’un système de vote en ligne afin d’arriver à une vrai démocratie. Plus précisément que chaque citoyen, c’est à dire soumis à la Loi, puisse participer à la décision collective à travers le vote de la Loi.\nJ’ai notamment découvert le projet Belenios\nVous pouvez trouver une version exhaustive de mon curriculum vitae\nJe m’intéresse également à tout ce que peux faire la fondation Apache, particulièrement la suite suivante :\nApache Camel\nApache Karaf\nApache Kafka\nApache ActiveMQ\nApache Cassandra\nPour le déploiement, j’utilise Docker bien que très intéressé par Nix\nDu fait de ma formation initiale de statisticien, je suis plus à l’aise avec l’utilisation de R et toute la suite proposée à côté :tidyverse, shiny, quarto,....\nJe suis également un chineur de Rapsberry Pi.\nPour le moment, pendant mon temps libre je m’occupe à la réalisation d’un mini-projet de bureau de vote en ligne ayant pour but de mesurer la différence de vote entre une assemblée élective et une assemblée participative et ainsi déterminer un indice de représentativité.\nLe code peut être consulté sur GitHub\nPour contrainte technique :\n1. L’utilisation de R et plus précisément des packages suivants (tidyverse & co, shiny, quarto)\n2. L’utilisation d’une base de données PostgreSQL\n3. L’utilisation de Rapsberry Pi sous Debian fonctionnant en réseau\nAvec ce blog, je souhaite présenter mes divers travaux à l’instar de mon mentor RODRIGUES Bruno et de l’ensemble des Rbloggers.\nJe tiens également à remercier les contributeurs au projet R4pi.\nVous pouvez me joindre sur Linkdin ou GitHub mais également Redit.\nVous pouvez également me joindre par mail ou me défiez aux échecs.\nMerci à vous pour m’avoir lu.\nPS : Vous pouvez trouver une version exhaustive de l’oeuvre Du Contrat social de 1762 par Jean-Jacques ROUSSEAU."
  },
  {
    "objectID": "posts/apache_docker_debian/apache_docker_debian.html#définition-du-logiciel-libre",
    "href": "posts/apache_docker_debian/apache_docker_debian.html#définition-du-logiciel-libre",
    "title": "De l’utilisation d’Apache dans Docker avec Windows",
    "section": "Définition du logiciel libre   ",
    "text": "Définition du logiciel libre   \nAujourd’hui, un logiciel est considéré comme libre, au sens de la Free Software Foundation, s’il confère à son utilisateur quatre libertés :\n\nla liberté d’exécuter le programme, pour tous les usages ;\nla liberté d’étudier le fonctionnement du programme et de l’adapter à ses besoins ;\nla liberté de redistribuer des copies du programme (ce qui implique la possibilité aussi bien de donner que de vendre des copies) ;\nla liberté d’améliorer le programme et de distribuer ces améliorations au public, pour en faire profiter toute la communauté."
  },
  {
    "objectID": "posts/apache_docker_debian/apache_docker_debian.html#avantage-du-logiciel-libre",
    "href": "posts/apache_docker_debian/apache_docker_debian.html#avantage-du-logiciel-libre",
    "title": "De l’utilisation d’Apache dans Docker avec Windows",
    "section": "Avantage du logiciel libre   ",
    "text": "Avantage du logiciel libre   \n\nLa qualité du logiciel est souvent proportionnelle au nombre de développeurs. Plus la communauté de développement s’étend, plus elle devient un gage de qualité et de réactivité. De la même manière, la communauté des utilisateurs, ayant comme rôle principal de faire remonter des dysfonctionnements et des suggestions, a une influence proportionnelle à sa taille.\nLes logiciels libres ont, dans leur grande majorité, tendance à respecter les formats standards ouverts, ce qui favorise l’interopérabilité\nLes logiciels libres peuvent être gratuits, ce qui permet aux petites entreprises de réduire les coûts d’acquisition et de maintenance des logiciels\nLes logiciels libres peuvent être modifiés et personnalisés pour répondre aux besoins spécifiques de l’entreprise.\nEn utilisant des logiciels libres, les petites entreprises ne dépendent pas d’une seule société pour leur fournir des logiciels et peuvent choisir parmi plusieurs options.\nL’utilisation des logiciels libres peut aider les employés à développer leurs compétences informatiques, ce qui est bénéfique pour l’entreprise.\nLes logiciels libres permettent aux petites entreprises de collaborer facilement avec d’autres entreprises et organisations qui utilisent également des logiciels libres.\nLes logiciels libres sont souvent conçus pour être évolutifs et adaptables, ce qui les rend parfaits pour les petites entreprises qui cherchent à grandir.\nLes logiciels libres sont généralement soutenus par une communauté de développeurs et d’utilisateurs qui peuvent aider à résoudre les problèmes et à fournir des mises à jour.\nLes logiciels libres disposent de leur code en libre accès, ce qui signifie que les utilisateurs peuvent voir et comprendre comment ils fonctionnent, ce qui peut aider à résoudre les problèmes plus rapidement\nLes logiciels libres peuvent être maintenus et utilisés pendant de nombreuses années, même après que leur développement initial a été abandonné, contrairement aux logiciels propriétaires qui ont des mises à jour obligatoires et des coûts de mise à jour. Cela aussi permet aux petites entreprises de planifier leur utilisation à long terme sans avoir à se soucier de la fin de vie des logiciels.\nLes logiciels libres encouragent l’innovation, car les développeurs peuvent utiliser les codes source pour créer de nouvelles fonctionnalités ou améliorer les fonctionnalités existantes.\nLes logiciels libres sont généralement accessibles à tous, indépendamment de leur budget, ce qui permet aux petites entreprises de bénéficier des mêmes avantages que les grandes entreprises.\nLes logiciels libres sont généralement multi-plateformes, ce qui signifie qu’ils peuvent être utilisés sur de nombreux systèmes d’exploitation différents, ce qui est bénéfique pour les petites entreprises qui utilisent différents types de matériel,\nEn utilisant des logiciels libres, les petites entreprises peuvent s’assurer qu’ils ne contribuent pas à une propriété intellectuelle restrictive et à la surveillance des utilisateurs, ce qui peut être le cas dans les logiciels propriétaires.\nLes logiciels libres permettent aux petites entreprises de diversifier leur utilisation de logiciels, en utilisant des outils différents pour différentes tâches, plutôt que d’être limité à un seul ensemble d’outils.\nLes logiciels libres permettent aux petites entreprises de prendre la responsabilité de leur propre utilisation de logiciels, en les modifiant et en les utilisant de manière responsable, plutôt que de dépendre d’une société tierce pour les fournir et les gérer.\nLes logiciels libres peuvent permettre aux petites entreprises de réaliser des économies importantes, en évitant les coûts de licence et de mise à jour des logiciels propriétaires.\nLes logiciels libres ont tendance à être testés et vérifiés par une communauté de développeurs et d’utilisateurs, ce qui peut augmenter leur fiabilité par rapport aux logiciels propriétaires qui ne sont généralement testés que par une équipe interne."
  },
  {
    "objectID": "posts/apache_docker_debian/apache_docker_debian.html#le-noyau-linux",
    "href": "posts/apache_docker_debian/apache_docker_debian.html#le-noyau-linux",
    "title": "De l’utilisation d’Apache dans Docker avec Windows",
    "section": "Le noyau LINUX   ",
    "text": "Le noyau LINUX   \nEn 1991, l’étudiant finlandais Linus Torvalds, indisposé par la faible disponibilité du serveur informatique UNIX de l’université d’Helsinki, entreprend le développement d’un noyau de système d’exploitation, qui prendra le nom de « noyau Linux ».\nLinux n’aurait pu se développer sans la présence de protocoles standardisés utilisés sur Internet. Un bon nombre de logiciels libres sont d’ailleurs des implémentations de référence, comme Apache."
  },
  {
    "objectID": "posts/apache_docker_debian/apache_docker_debian.html#la-fondation-apache",
    "href": "posts/apache_docker_debian/apache_docker_debian.html#la-fondation-apache",
    "title": "De l’utilisation d’Apache dans Docker avec Windows",
    "section": "La fondation Apache   ",
    "text": "La fondation Apache   \nLa fondation Apache est une communauté décentralisée de développeurs qui travaillent sur ses projets open source. Les projets Apache sont caractérisés par un mode de développement collaboratif fondé sur le consensus ainsi que par une licence de logiciel ouverte et pragmatique. Chaque projet est dirigé par une équipe de contributeurs auto-désignée et on ne devient membre de la fondation qu’après avoir contribué activement aux projets Apache.\nDans le BBL, nous allons nous consacrer sur\n\nApache Camel\nApache Karaf\nApache Cassandra\nAapache ActiveMQ\nApache Kafka"
  },
  {
    "objectID": "posts/apache_docker_debian/apache_docker_debian.html#le-projet-docker",
    "href": "posts/apache_docker_debian/apache_docker_debian.html#le-projet-docker",
    "title": "De l’utilisation d’Apache dans Docker avec Windows",
    "section": "Le projet Docker   ",
    "text": "Le projet Docker   \nDocker est développé par Solomon Hykes pour un projet interne de dotCloud, une entreprise française proposant une plate-forme en tant que service, avec les contributions d’Andrea Luzzardi et Francois-Xavier Bourlet, également employés de dotCloud. Docker est une évolution basée sur les technologies propriétaires de dotCloud, elles-mêmes construites sur des projets open source.\nDocker est distribué en tant que projet open source à partir de mars 2013.\nL’objectif d’un conteneur est le même que pour un serveur dédié virtuel : héberger des services sur un même serveur physique tout en les isolant les uns des autres. Un conteneur est cependant moins figé qu’une machine virtuelle en matière de taille de disque et de ressources allouées.\nUn conteneur permet d’isoler chaque service : le serveur web, la base de données, des applications pouvant être exécutées de façon indépendante dans leur conteneur dédié, contenant uniquement les dépendances nécessaires. Chaque conteneur peut être relié aux autres par des réseaux virtuels. Il est possible de monter des volumes de disque de la machine hôte dans un conteneur.\nDocker vous permet d’envoyer du code plus rapidement, de standardiser les opérations de vos applications, de migrer aisément du code et de faire des économies en améliorant l’utilisation des ressources. Avec Docker, vous obtenez un objet unique que vous pouvez exécuter n’importe où de manière fiable."
  },
  {
    "objectID": "posts/apache_docker_debian/apache_docker_debian.html#le-logiciel-talend",
    "href": "posts/apache_docker_debian/apache_docker_debian.html#le-logiciel-talend",
    "title": "De l’utilisation d’Apache dans Docker avec Windows",
    "section": "Le logiciel Talend   ",
    "text": "Le logiciel Talend   \nTalend Open Studio est un logiciel libre sous la licence Apache.\nIl va nous permettre de dévelloper des routes sous Apache Camel afin d’intégrer les divers message dans :\n\nApache Cassandra\nAapache ActiveMQ\nApache Kafka\n\nLa route développée va être déployée dans Apache Karaf."
  },
  {
    "objectID": "posts/apache_docker_debian/apache_docker_debian.html#quid-de-windows",
    "href": "posts/apache_docker_debian/apache_docker_debian.html#quid-de-windows",
    "title": "De l’utilisation d’Apache dans Docker avec Windows",
    "section": "Quid de Windows   ",
    "text": "Quid de Windows   \nSimple, Docker ne fonctionne pas sur Windows.\nPour pouvoir utiliser Docker sur Windows, il va falloir installer Linux sur Wndows.\nLinux 1 - 0 Windows\nOn a jamais vu la réciproque, c’est à dire quelqu’un installer windows sur Linux"
  },
  {
    "objectID": "posts/apache_docker_debian/apache_docker_debian.html#création-dun-container-apache-cassandra",
    "href": "posts/apache_docker_debian/apache_docker_debian.html#création-dun-container-apache-cassandra",
    "title": "De l’utilisation d’Apache dans Docker avec Windows",
    "section": "Création d’un container Apache Cassandra",
    "text": "Création d’un container Apache Cassandra\nEtape 1 : Mettre dans un dossier le fichier docker-compose.yml avec le contenu suivant\nversion: '3'\nservices:\n  cassandra:\n    image: cassandra:latest\n    ports:\n      - \"9042:9042\"\n    volumes:\n      - /var/lib/cassandra\n  sample-data:\n    image: cassandra:latest\n    depends_on:\n      - cassandra\n    restart: \"no\"\n    entrypoint: [\"/sample_data.sh\"]\n    volumes:\n      - ./sample_data.sh:/sample_data.sh\nEtape 2 : Mettre dans le même dossier le fichier sample_data.sh avec le contenu suivant\n#!/usr/bin/env bash\n\nuntil printf \"\" 2&gt;&gt;/dev/null &gt;&gt;/dev/tcp/cassandra/9042; do \n    sleep 5;\n    echo \"Waiting for cassandra...\";\ndone\n\necho \"Creating keyspace and tables...\"\ncqlsh cassandra -e \"CREATE KEYSPACE IF NOT EXISTS democratie WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : '1' };\"\ncqlsh cassandra -e \"CREATE TABLE IF NOT EXISTS democratie.vote (loi_code text,depute_code text, vote_code int, PRIMARY KEY (loi_code,depute_code));\"\"\nEtape 3 : Exécuter la commande suivante dans le dossier\ndocker-compose -f docker-compose.yml up -d"
  },
  {
    "objectID": "posts/apache_docker_debian/apache_docker_debian.html#création-dun-container-apache-activemq",
    "href": "posts/apache_docker_debian/apache_docker_debian.html#création-dun-container-apache-activemq",
    "title": "De l’utilisation d’Apache dans Docker avec Windows",
    "section": "Création d’un container Apache ActiveMQ",
    "text": "Création d’un container Apache ActiveMQ\nEtape 1 : Mettre dans un dossier le fichier docker-compose.yml avec le contenu suivant\nversion: '3.2'\nservices:\n  activemq:\n    image:  symptoma/activemq:latest\n    container_name: 'activemq'\n    ports:\n      - \"9000:61616\"\n      - \"8161:8161\"\n    extra_hosts:\n      - \"host.docker.internal:host-gateway\"\nEtape 2 : Exécuter la commande suivante dans le dossier\ndocker-compose -f docker-compose.yml up -d"
  },
  {
    "objectID": "posts/apache_docker_debian/apache_docker_debian.html#création-dune-route-apache-camel",
    "href": "posts/apache_docker_debian/apache_docker_debian.html#création-dune-route-apache-camel",
    "title": "De l’utilisation d’Apache dans Docker avec Windows",
    "section": "Création d’une route Apache Camel",
    "text": "Création d’une route Apache Camel"
  },
  {
    "objectID": "posts/apache_docker_debian/apache_docker_debian.html#création-dun-container-apache-karaf",
    "href": "posts/apache_docker_debian/apache_docker_debian.html#création-dun-container-apache-karaf",
    "title": "De l’utilisation d’Apache dans Docker avec Windows",
    "section": "Création d’un container Apache Karaf",
    "text": "Création d’un container Apache Karaf\nEtape 1 : Mettre dans un dossier le fichier post_vote_docker_global_cql_0.1.kar dévellopé précédemment\nEtape 2 : Mettre dans le même dossier l’archive d’un Apache Karaf container.tar.gz\nEtape 3 : Mettre dans le même dossier le fichier Dockerfile avec le contenu suivant\nFROM openjdk:11-jdk-slim-sid\n\nMAINTAINER quentingollentz\n\nARG kar_filename=post_vote_docker_global_cql_0.1.kar\n\nENV KAR_FILENAME ${kar_filename}\nENV KARAF_VERSION=4.2.7\n\nCOPY container.tar.gz ./\n\nRUN mkdir /opt/karaf; \\\n    tar --strip-components=1 -C /opt/karaf -xzf container.tar.gz; \\\n    rm container.tar.gz;\n\nCOPY ${KAR_FILENAME} /opt/karaf/deploy/\n\nEXPOSE 8040 8052 \n\nENTRYPOINT [\"/bin/bash\"]\n\nCMD [\"/opt/karaf/bin/trun\", \"run\"]\nEtape 4 : Mettre dans le même dossier le fichier docker-compose.yml avec le contenu suivant\nversion: '3.0'\nservices:\n    karaf_docker:\n        image: karaf_docker\n        container_name: karaf_docker\n        restart: always\n        ports:\n            - \"8040:8040\"\n            - \"8052:8052\"\n        stdin_open: true\n        tty: true\n        extra_hosts:\n            - \"host.docker.internal:host-gateway\"\n    zookeeper:\n        image: confluentinc/cp-zookeeper:latest\n        environment:\n         ZOOKEEPER_CLIENT_PORT: 2181\n         ZOOKEEPER_SERVER_ID: 1\n        ports:\n            - \"2181:2181\"\n        extra_hosts:\n            - \"host.docker.internal:host-gateway\"\n\n\n    kafka-1:\n        image: confluentinc/cp-kafka:latest\n        ports:\n            - \"9092:9092\"\n            - \"29092:29092\"\n        extra_hosts:\n            - \"host.docker.internal:host-gateway\"\n        environment:\n          KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092\n          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT\n          KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL\n          KAFKA_ZOOKEEPER_CONNECT: \"zookeeper:2181\"\n          KAFKA_BROKER_ID: 1\n        depends_on:\n          - zookeeper\n\n    kafka-2:\n        image: confluentinc/cp-kafka:latest\n        ports:\n            - \"9093:9093\"\n            - \"29093:29093\"\n        extra_hosts:\n            - \"host.docker.internal:host-gateway\"\n        environment:\n          KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093\n          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT\n          KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL\n          KAFKA_ZOOKEEPER_CONNECT: \"zookeeper:2181\"\n          KAFKA_BROKER_ID: 2\n        depends_on:\n            - zookeeper\n\n    kafka-3:\n        image: confluentinc/cp-kafka:latest\n        ports:\n            - \"9094:9094\"\n            - \"29094:29094\"\n        extra_hosts:\n            - \"host.docker.internal:host-gateway\"\n        environment:\n          KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:19094,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094,DOCKER://host.docker.internal:29094\n          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT\n          KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL\n          KAFKA_ZOOKEEPER_CONNECT: \"zookeeper:2181\"\n          KAFKA_BROKER_ID: 3\n        depends_on:\n            - zookeeper\n\nEtape 5 : Exécuter les commandes suivantes dans le dossier\ndocker build -t karaf_docker .\ndocker-compose -f karaf_docker.yml up -d"
  },
  {
    "objectID": "posts/apache_docker_debian/apache_docker_debian.html#création-dune-route-apache-camel-via-talend",
    "href": "posts/apache_docker_debian/apache_docker_debian.html#création-dune-route-apache-camel-via-talend",
    "title": "De l’utilisation d’Apache dans Docker avec Windows",
    "section": "Création d’une route Apache Camel (via Talend)",
    "text": "Création d’une route Apache Camel (via Talend)"
  },
  {
    "objectID": "posts/apache_docker_debian/apache_docker_debian.html#test-de-lenvironnement-dévellopé",
    "href": "posts/apache_docker_debian/apache_docker_debian.html#test-de-lenvironnement-dévellopé",
    "title": "De l’utilisation d’Apache dans Docker avec Windows",
    "section": "Test de l’environnement dévellopé",
    "text": "Test de l’environnement dévellopé\nlibrary(httr)\n\nheaders = c(\n  'Content-Type' = 'application/json'\n)\n\nbody = '{\n  \"loi_code\": \"SUCCEED_2024_20_04_2024\",\n  \"vote_code\": \"2\",\n  \"depute_code\": \"QUENTIN\"\n}';\n\nres &lt;- VERB(\"POST\", url = \"http://localhost:8052/assemblee_nationale\", body = body, add_headers(headers))\nheaders(res)"
  },
  {
    "objectID": "posts/kaggle/escort_analysis.html",
    "href": "posts/kaggle/escort_analysis.html",
    "title": "De l’explication du prix d’une escort",
    "section": "",
    "text": "Présentation des données"
  },
  {
    "objectID": "posts/test/test.html",
    "href": "posts/test/test.html",
    "title": "TEST",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "posts/test/test.html#quarto",
    "href": "posts/test/test.html#quarto",
    "title": "TEST",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "posts/test/test.html#running-code",
    "href": "posts/test/test.html#running-code",
    "title": "TEST",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "posts/formation_talend/quarto_document_formation_talend.html",
    "href": "posts/formation_talend/quarto_document_formation_talend.html",
    "title": "De l’utilisation de Talend pour l’OpenData de l’Assemblée Nationale",
    "section": "",
    "text": "Cliquez pour télécharger."
  },
  {
    "objectID": "posts/democratie_empirique/democratie_empirique.html",
    "href": "posts/democratie_empirique/democratie_empirique.html",
    "title": "De la démocratie théorique à la démocratie empirique",
    "section": "",
    "text": "La dictature s’est toujours chez les autres\n\nCette carte montre les gouvernements se réclamant (ou non) de la démocratie en juin 2019.\nSeules les pays rouge ne se réclament pas être une démocratie\nOn entend souvent que tel ou tel pays serait une démocratie et que tel ou tel autre serait une dictature.\nCette affirmation pose problème dans le sens où on établis ici une frontière stricte entre deux catégories que pourrait avoir un pays, à savoir démocratique ou non.\nAprès une telle affirmation, la question de la pertinence de restreindre l’espace des régimes à deux états se pose.\nEt cette question de la pertinence de restriction à deux catégories se pose d’autant plus, qu’il convient de disposer d’un critère de discrimination permettant de justifier de l’attribution d’un pays à tel ou tel catégorie, si non la catégorisation est arbitraire et ne saurait être justifiable.\nMais avant de disposer d’un critère, il convient de s’intéresser à l’objet de l’étude.\n\n\nDéfinition du termes démocratie\nSelon Wikipédia : Le terme démocratie, du grec ancien δημοκρατία / dēmokratía, combinaison de δῆμος / dêmos, « peuple » (de δαίομαι / daíomai, « distribuer, répartir »), et kratos, « le pouvoir », dérivé du verbe kratein, « commander », désigne à l’origine un régime politique dans lequel tous les citoyens participent aux décisions publiques et à la vie politique de la cité.\nNous voyons ici une définition stricte, dans le sens où :\n\nsoit tous les citoyens participent aux décisions publiques\nsoit tous les citoyens ne participent pas aux décisions politique\n\nCette définition introduit le concept de participation aux décisions\nDans le cas où la participation de tous n’est pas possible, on peut introduire le concept de représentation dont le rôle des députés est la participation aux décisions de telle manière que l’aurait fait les citoyens.\nMais dans ce cas se pose le problème de la représentation, à savoir à quel point les députés représentent les citoyens.\nQuelques éléments peuvent favoriser cette représentation :\n\nprocessus d’élection des députés\nprocessus de la participation aux décisions\ndisposition d’informations loyales, claires\n\n\n\nIndice de démocratie selon The Economist\n\nCarte de l’indice de démocratie publié par Economist Intelligence Unit en 2022 : plus le pays est en vert, plus il est considéré comme démocratique.\nC’est avec cette vision que (Group 2006) définit son indice de démocratie à savoir : “The Democracy Index is based on five categories: electoral process and pluralism, functioning of government, political participation, political culture, and civil liberties. Based on its scores on a range of indicators within these categories, each country is then classified as one of four types of regime:”full democracy”, “flawed democracy”, “hybrid regime” or “authoritarian regime”.\nSoit :\n\nun pays j\nune question k\nQ_{k,i} la réponse du citoyen i à la question k pouvant prendre valeur dans la la liste [0;0.5;1]\n\nAlors on a un indice de démocratie que l’on note ID_{j} définis par l’expression suivante :\n\nID_{j}=\\frac{\\sum_{i=1}^{N}\\sum_{k=1}^{60}Q_{i,k}}{60}.\n\nSi cette ID_{j}&gt;0.8 alors full democracy\nSi cette ID_{j}&lt;0.8 & ID_{j}&gt;0.6 alors flawed democracy\nSi cette ID_{j}&lt;0.6 & ID_{j}&gt;0.4 alors hybrid regime\nSi cette ID_{j}&lt;0.4 alors authoritarian regime\n\n\nIndice de démocratie alternatif\nDans cette définition alternative, nous allons uniquement faire une définition alternative de k.\nSoit un pays j définis par des citoyens i avec N l’ensemble des citoyens.\nLes citoyens sont soumis à des lois k avec K l’ensemble des lois.\nLa seule différence ici par rapport au modèle de The Economist est d’avoir remplacé k une question par k la question relative à l’acceptation d’une loi k.\nEn définissant Q_{k,i} comme :\n\n1 si l’acceptation à la règle k par le citoyen i\n0.5 si pas d’avis vis à vis de la règle k par le citoyen i\n0 si pas d’acceptation de la règle k par le citoyen i\n\nNous obtenons un modèle similaire à celui de The Economist.\nLa contrainte est que l’espace K est ici bien supérieur à 60 et que l’information est bien plus complexe.\nNéanmoins nous obtenons une mesure plus précise quand à l’objet étudié.\n\n\n\n\n\nReferences\n\nGroup, The Economist. 2006. “Democracy Index.”"
  },
  {
    "objectID": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#format-de-données",
    "href": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#format-de-données",
    "title": "De la données non structurées en base de données structurées",
    "section": "Format de données   ",
    "text": "Format de données   \nAllégorie du gaz.\nLa donnée peut être représenté selon différentes formes :\n\nl’usage qui est faite de la donnée conditionne sa forme.\n\nla forme de la donnée conditionne son usage\n\nDistinction Information/Donnée :\n\nL’information est la mise en contexte d’une donnée.\nLa donnée est le support ou vecteur de l’information.\n\nCi-dessous 2 format pour 1 information :\n\nJSON\n\n{\n                \"civ\": \"M.\",\n                \"prenom\": \"David\",\n                \"nom\": \"Habib\",\n                \"alpha\": \"HabibD\",\n                \"trigramme\": \"DHA\"\n}\n\nCSV\n\nciv;prenom;nom;alpha;trigramme\nM.;David;Habib;HabibD;DHA"
  },
  {
    "objectID": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#concept-de-tidy-data",
    "href": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#concept-de-tidy-data",
    "title": "De la données non structurées en base de données structurées",
    "section": "Concept de Tidy Data   ",
    "text": "Concept de Tidy Data   \n\n(Wickham 2014)"
  },
  {
    "objectID": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#tidy-data-et-messy-data",
    "href": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#tidy-data-et-messy-data",
    "title": "De la données non structurées en base de données structurées",
    "section": "Tidy Data et Messy Data   ",
    "text": "Tidy Data et Messy Data   \n (Lowndes and Horst 2020)\n\n\\(80\\) à \\(90\\)% des données sont non structurées.\nListe d’exemple de Messy Data à partir de MongoDB\n\n\njson dont geojson\n\n\nxml\n\n\nimage\n\n\ntexte\n\n\n..."
  },
  {
    "objectID": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#lavantage-du-tidy-data",
    "href": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#lavantage-du-tidy-data",
    "title": "De la données non structurées en base de données structurées",
    "section": "L’avantage du Tidy Data   ",
    "text": "L’avantage du Tidy Data   \n (Lowndes and Horst 2020)\n\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\n\ntidydata_format &lt;- table1 %&gt;%\n  select(country,year,population) %&gt;%\n  filter(year==2000)\ntidydata_format\n\n# A tibble: 3 x 3\n  country      year population\n  &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt;\n1 Afghanistan  2000   20595360\n2 Brazil       2000  174504898\n3 China        2000 1280428583\n\nnot_tidydata_format &lt;- table4b %&gt;% select(-`1999`) \nnot_tidydata_format\n\n# A tibble: 3 x 2\n  country         `2000`\n  &lt;chr&gt;            &lt;dbl&gt;\n1 Afghanistan   20595360\n2 Brazil       174504898\n3 China       1280428583\n\nalso_not_tidydata_format &lt;- table2 %&gt;% filter(year==2000) \nalso_not_tidydata_format\n\n# A tibble: 6 x 4\n  country      year type            count\n  &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;           &lt;dbl&gt;\n1 Afghanistan  2000 cases            2666\n2 Afghanistan  2000 population   20595360\n3 Brazil       2000 cases           80488\n4 Brazil       2000 population  174504898\n5 China        2000 cases          213766\n6 China        2000 population 1280428583"
  },
  {
    "objectID": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#quand-un-messy-data-ne-peut-se-transformer-en-tidy-data",
    "href": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#quand-un-messy-data-ne-peut-se-transformer-en-tidy-data",
    "title": "De la données non structurées en base de données structurées",
    "section": "Quand un Messy Data ne peut se transformer en Tidy Data   ",
    "text": "Quand un Messy Data ne peut se transformer en Tidy Data   \nPrenons l’exemple des circonscriptions françaises.\nSi une circonscription se limitait à un point, on pourrait considérer la structure suivante :\n\ntribble(\n  ~ ID, ~ code_dpt, ~ nom_dpt, ~ nom_reg, ~ num_circ, ~ lattitude, ~ longitude,\n   \"33004\",\"33\", \"GIRONDE\", \"AQUITAINE-LIMOUSIN-POITOU-CHARENTES\",\"75\",-0.454946,44.953424,\n   \"33004\",\"68\", \"HAUT-RHIN\", \"ALSACE-CHAMPAGNE-ARDENNE-LORRAINE\",\"44\", 6.981539,48.009421)\n\n# A tibble: 2 x 7\n  ID    code_dpt nom_dpt   nom_reg                       num_c~1 latti~2 longi~3\n  &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;                         &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 33004 33       GIRONDE   AQUITAINE-LIMOUSIN-POITOU-CH~ 75       -0.455    45.0\n2 33004 68       HAUT-RHIN ALSACE-CHAMPAGNE-ARDENNE-LOR~ 44        6.98     48.0\n# ... with abbreviated variable names 1: num_circ, 2: lattitude, 3: longitude\n\n\nMalheureusement c’est plus compliqué que cela.\n (“Carte Des Circonscriptions Législatives 2012 Et 2017” 2017)\n\n\nPremière solution :\nMultiplier les colonnes :\n\ntribble(\n  ~ ID, ~ code_dpt, ~ nom_dpt, ~ nom_reg, ~ num_circ, ~ lattitude_point1, ~ lattitude_point1,~ lattitude_point2, ~ lattitude_point2,~ lattitude_point3, ~ lattitude_point3,\n   \"33004\",\"33\", \"GIRONDE\", \"AQUITAINE-LIMOUSIN-POITOU-CHARENTES\",\"75\",-0.454946,44.953424,-0.454946,45.953424,-0.454946,46.953424,\n   \"33004\",\"68\", \"HAUT-RHIN\", \"ALSACE-CHAMPAGNE-ARDENNE-LORRAINE\",\"44\", 6.981539,48.009421, 6.981539,49.009421, 6.981539,50.009421)\n\n# A tibble: 2 x 11\n  ID    code_dpt nom_dpt nom_reg num_c~1 latti~2 latti~3 latti~4 latti~5 latti~6\n  &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 33004 33       GIRONDE AQUITA~ 75       -0.455    45.0  -0.455    46.0  -0.455\n2 33004 68       HAUT-R~ ALSACE~ 44        6.98     48.0   6.98     49.0   6.98 \n# ... with 1 more variable: lattitude_point3 &lt;dbl&gt;, and abbreviated variable\n#   names 1: num_circ, 2: lattitude_point1, 3: lattitude_point1,\n#   4: lattitude_point2, 5: lattitude_point2, 6: lattitude_point3\n\n\n\nDeuxième solution :\nMultiplier les lignes :\n\ntribble(\n  ~ ID, ~ code_dpt, ~ nom_dpt, ~ nom_reg, ~ num_circ, ~ lattitude, ~ lattitude,\n   \"33004\",\"33\", \"GIRONDE\", \"AQUITAINE-LIMOUSIN-POITOU-CHARENTES\",\"75\",-0.474946,44.953424,\n   \"33004\",\"33\", \"GIRONDE\", \"AQUITAINE-LIMOUSIN-POITOU-CHARENTES\",\"75\",-0.254946,45.953424,\n   \"33004\",\"33\", \"GIRONDE\", \"AQUITAINE-LIMOUSIN-POITOU-CHARENTES\",\"75\",-0.44946,46.953424,\n   \"33004\",\"68\", \"HAUT-RHIN\", \"ALSACE-CHAMPAGNE-ARDENNE-LORRAINE\",\"44\", 6.981539,49.009421,\n   \"33004\",\"68\", \"HAUT-RHIN\", \"ALSACE-CHAMPAGNE-ARDENNE-LORRAINE\",\"44\", 6.981539,50.009421,\n   \"33004\",\"68\", \"HAUT-RHIN\", \"ALSACE-CHAMPAGNE-ARDENNE-LORRAINE\",\"44\", 6.981539,51.009421,\n  )\n\n# A tibble: 6 x 7\n  ID    code_dpt nom_dpt   nom_reg                       num_c~1 latti~2 latti~3\n  &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;                         &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 33004 33       GIRONDE   AQUITAINE-LIMOUSIN-POITOU-CH~ 75       -0.475    45.0\n2 33004 33       GIRONDE   AQUITAINE-LIMOUSIN-POITOU-CH~ 75       -0.255    46.0\n3 33004 33       GIRONDE   AQUITAINE-LIMOUSIN-POITOU-CH~ 75       -0.449    47.0\n4 33004 68       HAUT-RHIN ALSACE-CHAMPAGNE-ARDENNE-LOR~ 44        6.98     49.0\n5 33004 68       HAUT-RHIN ALSACE-CHAMPAGNE-ARDENNE-LOR~ 44        6.98     50.0\n6 33004 68       HAUT-RHIN ALSACE-CHAMPAGNE-ARDENNE-LOR~ 44        6.98     51.0\n# ... with abbreviated variable names 1: num_circ, 2: lattitude, 3: lattitude\n\n\n\n=&gt; Nous somme contraint de considérer le type JSON"
  },
  {
    "objectID": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#le-type-geometry",
    "href": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#le-type-geometry",
    "title": "De la données non structurées en base de données structurées",
    "section": "Le type geometry   ",
    "text": "Le type geometry   \nConsidérons le type de variable geometry dans R dont la valeur est une liste de point.\n\nlibrary(geojsonsf)\nlibrary(tidyverse)\nlibrary(sf)\n\nfrance_metropolitaine = geojson_sf(\"data/france-circonscriptions-legislatives-2012.json\") %&gt;%\n  select(num_circ,code_dpt,geometry)%&gt;%\n  rename(circo = num_circ,departementCode = code_dpt) %&gt;%\n  filter(departementCode!=\"ZD\",\n         departementCode!=\"ZN\",\n         departementCode!=\"ZS\",\n         departementCode!=\"ZX\",\n         departementCode!=\"ZP\",\n         departementCode!=\"ZW\",\n         departementCode!=\"2B\",\n         departementCode!=\"2A\",\n         departementCode!=\"ZA\",\n         departementCode!=\"ZM\",\n         departementCode!=\"ZC\",\n         departementCode!=\"ZB\")\n\nfrance_metropolitaine\n\nSimple feature collection with 535 features and 2 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -5.115104 ymin: 42.33349 xmax: 8.197396 ymax: 51.0894\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   circo departementCode                       geometry\n1      4              33 POLYGON ((-0.454946 44.9534...\n2      1              38 POLYGON ((5.805288 45.2062,...\n3     10              59 POLYGON ((3.058745 50.78071...\n4      7              33 POLYGON ((-0.610649 44.8224...\n5      1              01 POLYGON ((4.888208 46.40298...\n6      2              01 POLYGON ((5.435634 45.82977...\n7      3              01 POLYGON ((5.831226 45.93846...\n8      4              01 POLYGON ((4.888208 46.40298...\n9      5              01 POLYGON ((5.51137 46.26436,...\n10     1              02 POLYGON ((3.320684 49.69935...\n\nplot(france_metropolitaine)"
  },
  {
    "objectID": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#quid-de-postgresql",
    "href": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#quid-de-postgresql",
    "title": "De la données non structurées en base de données structurées",
    "section": "Quid de PostgreSQL   ",
    "text": "Quid de PostgreSQL   \nCi-dessous un script permettant de reproduire la même chose en SQL :\n\nCREATE EXTENSION postgis;\n\nCREATE TABLE assemblee_elective.circonscription(\n  circo VARCHAR,\n  departementCode VARCHAR,\n  geometry geometry);\n \n WITH DATA AS (SELECT '{\n    \"type\": \"FeatureCollection\",\n    \"features\": [\n        {\n            \"type\": \"Feature\",\n            \"properties\": {\n                \"ID\": \"33004\",\n                \"code_dpt\": \"33\",\n                \"nom_dpt\": \"GIRONDE\",\n                \"nom_reg\": \"AQUITAINE-LIMOUSIN-POITOU-CHARENTES\",\n                \"num_circ\": \"4\",\n                \"code_reg\": \"75\"\n            },\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\n                    [\n                        [\n                            -0.454946,\n                            44.953424\n                        ],\n                        [...\n}'::json AS fc)\n\nINSERT INTO assemblee_elective.circonscription(geometry,departementcode,circo)\n\nSELECT\n\n  ST_AsText(ST_GeomFromGeoJSON(feat-&gt;&gt;'geometry')) AS geometry,\n  CAST(REPLACE(CAST(feat-&gt;'properties'-&gt;'code_dpt' AS varchar),'\"','') AS varchar) AS departementCode,\n  CAST(REPLACE(CAST(feat-&gt;'properties'-&gt;'num_circ' AS varchar),'\"','') AS varchar) AS circo\n  \nFROM (\n  SELECT json_array_elements(fc-&gt;'features') AS feat\n  FROM data \n) AS f;\n\nOn obtient un jeu de données qui est TIDY."
  },
  {
    "objectID": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#application-rattachement-adresse-à-une-circonscription",
    "href": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#application-rattachement-adresse-à-une-circonscription",
    "title": "De la données non structurées en base de données structurées",
    "section": "Application : Rattachement adresse à une circonscription   ",
    "text": "Application : Rattachement adresse à une circonscription   \nL’objectif étant à partir d’une adresse de déterminer la circonscription à laquelle appartient l’adresse en python :\n\n\n\nimport geopandas as gpd\nimport os\nimport psycopg2\nfrom sqlalchemy import create_engine\nimport geopy as gp\n\n\ndb = 'bdd_democratie'  \nhost_db = '176.147.16.188'   \ndb_port = '5432'  \ndb_user = \"postgres\"  \ndb_password = 'postgres'\n\n\nconn = psycopg2.connect(\n    host=host_db,\n    database=db,\n    user=db_user,\n    port = db_port,\n    password=db_password)\n\nengine = create_engine(\"postgresql://\"+ db_user + \":\" + db_password + \"@\" + host_db + \":\" + db_port + \"/\" + db)  \n\nadress = \"24 parc de la vallée, 68530 Buhl\"\nlocator = gp.Nominatim(user_agent=\"myGeocoder\")\n\nlocation = locator.geocode(adress)\nlocation.longitude\n\n7.179495\n\nlocation.latitude\n\n47.9343092\n\nquery_param = \"ST_SetSRID(ST_MakePoint(\" + str(location.longitude)  + \" , \" + str(location.latitude) + \"),4326)\"\nquery_param\n\n'ST_SetSRID(ST_MakePoint(7.179495 , 47.9343092),4326)'\n\nquery_kernel = \"SELECT nom_dpt, geometry as circonscription, \" +  query_param  + \" as point, ST_Contains(geometry,\" + query_param + \") as point_in_circo FROM assemblee_elective.circonscription;\"\nquery_kernel\n\n'SELECT nom_dpt, geometry as circonscription, ST_SetSRID(ST_MakePoint(7.179495 , 47.9343092),4326) as point, ST_Contains(geometry,ST_SetSRID(ST_MakePoint(7.179495 , 47.9343092),4326)) as point_in_circo FROM assemblee_elective.circonscription;'\n\ncursor = conn.cursor()\ncursor.execute(query_kernel)\n\nprint(\"Voci le résultat ci-dessous : \")\n\nVoci le résultat ci-dessous : \n\nmobile_records = cursor.fetchall()\nmobile_records[292] # Mon adresse appartient bien à la belle circonscription du HAUT-RHIN\n\n('HAUT-RHIN', '0103000020E6100000010000001900000082FE428F18ED1B40A47213B534014840B1FD648C0F131C40DC2C5E2C0C074840865AD3BCE3341C40D9B5BDDD920A48400C2252D32E561C403CF6B3588A10484028B517D1763C1C40BF9CD9AED01148403F912749D76C1C40C328081EDF184840ECA694D74A981C40570740DCD5214840B98AC56F0ACB1C408194D8B5BD274840B2DAFCBFEA181D40B265F9BA0C274840AF5C6F9BA9401D402975C93846204840309B00C3F2671D40A81DFE9AAC1F48407A39ECBE63E81D4052431B800D1A48406F2A52616CE11D40B2D5E59480144840DBDE6E490EC81D405A492BBEA11648402461DF4E22921D402C4487C091164840AD18AE0E80781D40C51C041DAD104840E355D636C5531D40C6C210397D0F4840998235CEA6431D40A3CA30EE06094840D177B7B244671D40DB166536C80648401D1D5723BB621D401230BABC39024840AAB706B64A501D40952C27A1F4F74740D5EAABAB02C51C407B4ACE893DF247409D6340F67A471C401BD5E940D6F34740CF68AB92C8EE1B404AEB6F09C0FD474082FE428F18ED1B40A47213B534014840', '0101000020E61000009D2E8B89CDB71C400C2DA17197F74740', True)\n\nmobile_records[132] # Mon adresse n'appartient pas à la moins belle circonscription du BAS-RHIN\n\n('BAS-RHIN', '0103000020E6100000010000000A0000008A8F4FC8CEEB1E40B2F2CB608C46484029EACC3D24EC1E4009FD4CBD6E47484026FBE769C0F01E409DD9AED00749484092B442DA18271F40FB668163A34B48404CC11A67D3311F40FB20CB82894B484085ED27637C381F404DBB9866BA414840F5B9DA8AFD151F40912BF52C083F4840DEE522BE13D31E40EFA83121E64048403BE5D18DB0C81E401EFB592C454448408A8F4FC8CEEB1E40B2F2CB608C464840', '0101000020E61000009D2E8B89CDB71C400C2DA17197F74740', False)\n\n\nUtilité dans l’application de prédiction de prix (Cf : BBL de Ramzi)"
  },
  {
    "objectID": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#application-un-etl-pour-un-flux-elt",
    "href": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#application-un-etl-pour-un-flux-elt",
    "title": "De la données non structurées en base de données structurées",
    "section": "Application : Un ETL pour un flux ELT   ",
    "text": "Application : Un ETL pour un flux ELT"
  },
  {
    "objectID": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#citations-et-discussion",
    "href": "posts/data_non_structure_sur_pgs/quarto_data_unstructured_pgs.html#citations-et-discussion",
    "title": "De la données non structurées en base de données structurées",
    "section": "Citations et discussion   ",
    "text": "Citations et discussion   \n\n\n\n\n\n\n\n\n“Carte Des Circonscriptions Législatives 2012 Et 2017.” 2017. https://www.data.gouv.fr/fr/datasets/r/efa8c2e6-b8f7-4594-ad01-10b46b06b56a.\n\n\nLowndes, Julia, and Allison Horst. 2020. “Illustrations from the Openscapes Blog Tidy Data for Reproducibility, Efficiency, and Collaboration by Julia Lowndes and Allison Horst.” https://allisonhorst.com/other-r-fun.\n\n\nWickham, Hadley. 2014. “Tidy Data.” Journal of Statistical Software 59 (10): 1–23. https://www.jstatsoft.org/index.php/jss/article/view/v059i10."
  }
]