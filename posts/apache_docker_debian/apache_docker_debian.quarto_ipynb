{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"De l'utilisation d'Apache dans Docker avec Windows\"\n",
        "subtitle: \"Création d'une route POST_VOTE\"\n",
        "categories: ['Apache Camel', 'Apache Kafka','Apache ActiveMQ','Apache Karaf','Docker','Talend','Debian']\n",
        "author:\n",
        "    name: GOLLENTZ Quentin\n",
        "    url: https://www.linkedin.com/in/quentin-gollentz-697993172/\n",
        "    email: quentin.gollentz@daka-team.com\n",
        "    affiliations:\n",
        "        name: DAKA-TEAM\n",
        "        url: https://www.linkedin.com/company/daka%E2%80%A2tec/\n",
        "        city: La Madelaine\n",
        "        state: France\n",
        "        postal-code: 5900\n",
        "date: last-modified\n",
        "date-format: \"DD-MM-YYYY\"\n",
        "title-block-banner: \"#ECF4FA\"\n",
        "bibliography: references.bib\n",
        "format: \n",
        "  revealjs:\n",
        "    #incremental: true\n",
        "    #logo: img/daka-team-white-final.png\n",
        "    #footer: \"`emitanaka.org/slides/toronto2022`\"\n",
        "    slide-number: true\n",
        "    multiplex: true\n",
        "    theme: [simple, assets/monash.scss]\n",
        "    show-slide-number: all\n",
        "    controls: true\n",
        "    width: 1280\n",
        "    scrollable : true\n",
        "    height: 720\n",
        "    toc: false\n",
        "    toc-depth: 100\n",
        "    css: [assets/syntax-highlight.css, assets/custom.css, assets/pacman.css, assets/logo.css]\n",
        "execute:\n",
        "  echo: true\n",
        "---\n",
        "\n",
        "\n",
        "## Définition du logiciel libre []{.circle} <i class=\"fa-brands fa-r-project\" style=\"height:120px;vertical-align:middle;\"></i> <img src=\"img/ll-logos2.png\" height=\"120px\" style=\"vertical-align:middle;\"/>\n",
        "\n",
        "Aujourd'hui, un logiciel est considéré comme libre, au sens de la Free Software Foundation, s'il confère à son utilisateur quatre libertés :\n",
        "\n",
        "-   la liberté d'exécuter le programme, pour tous les usages ;\n",
        "-   la liberté d'étudier le fonctionnement du programme et de l'adapter à ses besoins ;\n",
        "-   la liberté de redistribuer des copies du programme (ce qui implique la possibilité aussi bien de donner que de vendre des copies) ;\n",
        "-   la liberté d'améliorer le programme et de distribuer ces améliorations au public, pour en faire profiter toute la communauté.\n",
        "\n",
        "## Avantage du logiciel libre []{.circle} <i class=\"fa-brands fa-r-project\" style=\"height:120px;vertical-align:middle;\"></i> <img src=\"img/stallmanoramix.png\" height=\"120px\" style=\"vertical-align:middle;\"/>\n",
        "\n",
        "-   La qualité du logiciel est souvent proportionnelle au nombre de développeurs. Plus la communauté de développement s'étend, plus elle devient un gage de qualité et de réactivité. De la même manière, la communauté des utilisateurs, ayant comme rôle principal de faire remonter des dysfonctionnements et des suggestions, a une influence proportionnelle à sa taille.        \n",
        "\n",
        "-   Les logiciels libres ont, dans leur grande majorité, tendance à respecter les formats standards ouverts, ce qui favorise l'interopérabilité\n",
        "\n",
        "-    Les logiciels libres peuvent être gratuits, ce qui permet aux petites entreprises de réduire les coûts d'acquisition et de maintenance des logiciels\n",
        "\n",
        "-   Les logiciels libres peuvent être modifiés et personnalisés pour répondre aux besoins spécifiques de l'entreprise.\n",
        "\n",
        "-   En utilisant des logiciels libres, les petites entreprises ne dépendent pas d’une seule société pour leur fournir des logiciels et peuvent choisir parmi plusieurs options.\n",
        "\n",
        "-   L’utilisation des logiciels libres peut aider les employés à développer leurs compétences informatiques, ce qui est bénéfique pour l’entreprise.\n",
        "\n",
        "-   Les logiciels libres permettent aux petites entreprises de collaborer facilement avec d’autres entreprises et organisations qui utilisent également des logiciels libres.\n",
        "\n",
        "-   Les logiciels libres sont souvent conçus pour être évolutifs et adaptables, ce qui les rend parfaits pour les petites entreprises qui cherchent à grandir.\n",
        "\n",
        "-    Les logiciels libres sont généralement soutenus par une communauté de développeurs et d’utilisateurs qui peuvent aider à résoudre les problèmes et à fournir des mises à jour.\n",
        "\n",
        "-   Les logiciels libres disposent de leur code en libre accès, ce qui signifie que les utilisateurs peuvent voir et comprendre comment ils fonctionnent, ce qui peut aider à résoudre les problèmes plus rapidement\n",
        "\n",
        "-   Les logiciels libres peuvent être maintenus et utilisés pendant de nombreuses années, même après que leur développement initial a été abandonné, contrairement aux logiciels propriétaires qui ont des mises à jour obligatoires et des coûts de mise à jour. Cela aussi permet aux petites entreprises de planifier leur utilisation à long terme sans avoir à se soucier de la fin de vie des logiciels.\n",
        "\n",
        "-   Les logiciels libres encouragent l’innovation, car les développeurs peuvent utiliser les codes source pour créer de nouvelles fonctionnalités ou améliorer les fonctionnalités existantes.\n",
        "\n",
        "-   Les logiciels libres sont généralement accessibles à tous, indépendamment de leur budget, ce qui permet aux petites entreprises de bénéficier des mêmes avantages que les grandes entreprises.\n",
        "\n",
        "-   Les logiciels libres sont généralement multi-plateformes, ce qui signifie qu’ils peuvent être utilisés sur de nombreux systèmes d’exploitation différents, ce qui est bénéfique pour les petites entreprises qui utilisent différents types de matériel,\n",
        "\n",
        "-   En utilisant des logiciels libres, les petites entreprises peuvent s’assurer qu’ils ne contribuent pas à une propriété intellectuelle restrictive et à la surveillance des utilisateurs, ce qui peut être le cas dans les logiciels propriétaires.\n",
        "\n",
        "-   Les logiciels libres permettent aux petites entreprises de diversifier leur utilisation de logiciels, en utilisant des outils différents pour différentes tâches, plutôt que d’être limité à un seul ensemble d’outils.\n",
        "\n",
        "-   Les logiciels libres permettent aux petites entreprises de prendre la responsabilité de leur propre utilisation de logiciels, en les modifiant et en les utilisant de manière responsable, plutôt que de dépendre d’une société tierce pour les fournir et les gérer.\n",
        "\n",
        "-   Les logiciels libres peuvent permettre aux petites entreprises de réaliser des économies importantes, en évitant les coûts de licence et de mise à jour des logiciels propriétaires.\n",
        "\n",
        "-   Les logiciels libres ont tendance à être testés et vérifiés par une communauté de développeurs et d’utilisateurs, ce qui peut augmenter leur fiabilité par rapport aux logiciels propriétaires qui ne sont généralement testés que par une équipe interne.\n",
        "\n",
        "## Le noyau LINUX []{.circle} <i class=\"fa-brands fa-r-project\" style=\"height:120px;vertical-align:middle;\"></i> <img src=\"img/Tux.svg.png\" height=\"120px\" style=\"vertical-align:middle;\"/>\n",
        "\n",
        "En 1991, l'étudiant finlandais Linus Torvalds, indisposé par la faible disponibilité du serveur informatique UNIX de l'université d'Helsinki, entreprend le développement d'un noyau de système d'exploitation, qui prendra le nom de « noyau Linux ». \n",
        "\n",
        "Linux n'aurait pu se développer sans la présence de protocoles standardisés utilisés sur Internet. Un bon nombre de logiciels libres sont d'ailleurs des implémentations de référence, comme Apache.\n",
        "\n",
        "## La fondation Apache []{.circle} <i class=\"fa-brands fa-r-project\" style=\"height:120px;vertical-align:middle;\"></i> <img src=\"img/apache.png\" height=\"120px\" style=\"vertical-align:middle;\"/>\n",
        "\n",
        "La fondation Apache est une communauté décentralisée de développeurs qui travaillent sur ses projets open source. Les projets Apache sont caractérisés par un mode de développement collaboratif fondé sur le consensus ainsi que par une licence de logiciel ouverte et pragmatique.\n",
        "Chaque projet est dirigé par une équipe de contributeurs auto-désignée et on ne devient membre de la fondation qu'après avoir contribué activement aux projets Apache. \n",
        "\n",
        "Dans le BBL, nous allons nous consacrer sur \n",
        "\n",
        "-   Apache Camel\n",
        "-   Apache Karaf\n",
        "-   Apache Cassandra\n",
        "-   Aapache ActiveMQ\n",
        "-   Apache Kafka\n",
        "\n",
        "\n",
        "## Le projet Docker []{.circle} <i class=\"fa-brands fa-r-project\" style=\"height:120px;vertical-align:middle;\"></i> <img src=\"img/docker-logo.png\" height=\"120px\" style=\"vertical-align:middle;\"/>\n",
        "\n",
        "Docker est développé par Solomon Hykes pour un projet interne de dotCloud, une entreprise française proposant une plate-forme en tant que service, avec les contributions d'Andrea Luzzardi et Francois-Xavier Bourlet, également employés de dotCloud. Docker est une évolution basée sur les technologies propriétaires de dotCloud, elles-mêmes construites sur des projets open source.\n",
        "\n",
        "Docker est distribué en tant que projet open source à partir de mars 2013. \n",
        "\n",
        "L'objectif d'un conteneur est le même que pour un serveur dédié virtuel : héberger des services sur un même serveur physique tout en les isolant les uns des autres. Un conteneur est cependant moins figé qu'une machine virtuelle en matière de taille de disque et de ressources allouées.\n",
        "\n",
        "Un conteneur permet d'isoler chaque service : le serveur web, la base de données, des applications pouvant être exécutées de façon indépendante dans leur conteneur dédié, contenant uniquement les dépendances nécessaires. Chaque conteneur peut être relié aux autres par des réseaux virtuels. Il est possible de monter des volumes de disque de la machine hôte dans un conteneur.\n",
        "\n",
        "Docker vous permet d'envoyer du code plus rapidement, de standardiser les opérations de vos applications, de migrer aisément du code et de faire des économies en améliorant l'utilisation des ressources. Avec Docker, vous obtenez un objet unique que vous pouvez exécuter n'importe où de manière fiable.\n",
        "\n",
        "\n",
        "## Le logiciel Talend []{.circle} <i class=\"fa-brands fa-r-project\" style=\"height:120px;vertical-align:middle;\"></i> <img src=\"img/TalendLogoCoral.png\" height=\"120px\" style=\"vertical-align:middle;\"/>\n",
        "\n",
        "Talend Open Studio est un logiciel libre sous la licence Apache.        \n",
        "Il va nous permettre de dévelloper des routes sous Apache Camel afin d'intégrer les divers message dans :       \n",
        "    \n",
        "-   Apache Cassandra\n",
        "-   Aapache ActiveMQ\n",
        "-   Apache Kafka\n",
        "    \n",
        "La route développée va être déployée dans Apache Karaf.\n",
        "\n",
        "## Quid de Windows []{.circle} <i class=\"fa-brands fa-r-project\" style=\"height:120px;vertical-align:middle;\"></i> <img src=\"img/00epgates1-facebookJumbo-v3.jpg\" height=\"120px\" style=\"vertical-align:middle;\"/>\n",
        "\n",
        "Simple, Docker ne fonctionne pas sur Windows.   \n",
        "Pour pouvoir utiliser Docker sur Windows, il va falloir installer Linux sur Wndows.     \n",
        "Linux 1 - 0 Windows\n",
        "\n",
        "On a jamais vu la réciproque, c'est à dire quelqu'un installer windows sur Linux\n",
        "\n",
        "## Création d'un container Apache Cassandra\n",
        "\n",
        "Etape 1 : Mettre dans un dossier le fichier **docker-compose.yml** avec le contenu suivant  \n",
        "    \n",
        "```\n",
        "version: '3'\n",
        "services:\n",
        "  cassandra:\n",
        "    image: cassandra:latest\n",
        "    ports:\n",
        "      - \"9042:9042\"\n",
        "    volumes:\n",
        "      - /var/lib/cassandra\n",
        "  sample-data:\n",
        "    image: cassandra:latest\n",
        "    depends_on:\n",
        "      - cassandra\n",
        "    restart: \"no\"\n",
        "    entrypoint: [\"/sample_data.sh\"]\n",
        "    volumes:\n",
        "      - ./sample_data.sh:/sample_data.sh\n",
        "```\n",
        "Etape 2 : Mettre dans le même dossier le fichier **sample_data.sh** avec le contenu suivant  \n",
        "\n",
        "```\n",
        "#!/usr/bin/env bash\n",
        "\n",
        "until printf \"\" 2>>/dev/null >>/dev/tcp/cassandra/9042; do \n",
        "    sleep 5;\n",
        "    echo \"Waiting for cassandra...\";\n",
        "done\n",
        "\n",
        "echo \"Creating keyspace and tables...\"\n",
        "cqlsh cassandra -e \"CREATE KEYSPACE IF NOT EXISTS democratie WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : '1' };\"\n",
        "cqlsh cassandra -e \"CREATE TABLE IF NOT EXISTS democratie.vote (loi_code text,depute_code text, vote_code int, PRIMARY KEY (loi_code,depute_code));\"\"\n",
        "```\n",
        "\n",
        "Etape 3 :  Exécuter la commande suivante dans le dossier\n",
        "```\n",
        "docker-compose -f docker-compose.yml up -d\n",
        "```\n",
        "\n",
        "## Création d'un container Apache ActiveMQ\n",
        "\n",
        "Etape 1 : Mettre dans un dossier le fichier **docker-compose.yml** avec le contenu suivant  \n",
        "    \n",
        "```\n",
        "version: '3.2'\n",
        "services:\n",
        "  activemq:\n",
        "    image:  symptoma/activemq:latest\n",
        "    container_name: 'activemq'\n",
        "    ports:\n",
        "      - \"61616:61616\"\n",
        "      - \"8161:8161\"\n",
        "    extra_hosts:\n",
        "      - \"host.docker.internal:host-gateway\"\n",
        "```\n",
        "\n",
        "Etape 2 :  Exécuter la commande suivante dans le dossier\n",
        "```\n",
        "docker-compose -f docker-compose.yml up -d\n",
        "```\n",
        "\n",
        "## Création d'une route Apache Camel (via Talend)\n",
        "\n",
        "Etape 1 : Mettre dans un dossier le fichier **post_vote.java** avec le contenu suivant  \n",
        "\n",
        "\n",
        "```{java}\n",
        "import org.apache.camel.builder.RouteBuilder;\n",
        "\n",
        "public class post_vote extends RouteBuilder {\n",
        "\n",
        "    @Override\n",
        "    public void configure() throws Exception {\n",
        "\t\t\t\t\n",
        "\t\tfrom(\"jetty://http://0.0.0.0:11/assemblee_nationale\")\n",
        "\t\t\t.setHeader(\"businessStartDate\").simple(\"${date:now:yyyy-MM-dd'T'HH:mm:ss.SSSZ}\")\n",
        "\t\t\t.log(\"${body}\")\n",
        "\t\t\t.to(\"activemq:queue:VOTE?exchangePattern=InOnly\");\n",
        "    }\n",
        "}\n",
        "```\n",
        "\n",
        "Etape 1 : Mettre dans un dossier le fichier **post_vote.java** avec le contenu suivant  \n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## Création d'un container Apache Karaf\n",
        "\n",
        "Etape 1 : Mettre dans un dossier le fichier **post_vote_docker_global_cql_0.1.kar** dévellopé précédemment\n",
        "\n",
        "Etape 2 : Mettre dans le même dossier l'archive d'un Apache Karaf **container.tar.gz**\n",
        "\n",
        "Etape 3 : Mettre dans le même dossier le fichier **Dockerfile** avec le contenu suivant  \n",
        "\n",
        "```\n",
        "FROM openjdk:11-jdk-slim-sid\n",
        "\n",
        "MAINTAINER quentingollentz\n",
        "\n",
        "ARG kar_filename=post_vote_docker_global_cql_0.1.kar\n",
        "\n",
        "ENV KAR_FILENAME ${kar_filename}\n",
        "ENV KARAF_VERSION=4.2.7\n",
        "\n",
        "COPY container.tar.gz ./\n",
        "\n",
        "RUN mkdir /opt/karaf; \\\n",
        "    tar --strip-components=1 -C /opt/karaf -xzf container.tar.gz; \\\n",
        "    rm container.tar.gz;\n",
        "\n",
        "COPY ${KAR_FILENAME} /opt/karaf/deploy/\n",
        "\n",
        "EXPOSE 8040 8052 \n",
        "\n",
        "ENTRYPOINT [\"/bin/bash\"]\n",
        "\n",
        "CMD [\"/opt/karaf/bin/trun\", \"run\"]\n",
        "```\n",
        "\n",
        "Etape 4 : Mettre dans le même dossier le fichier **docker-compose.yml** avec le contenu suivant  \n",
        "\n",
        "```\n",
        "version: '3.0'\n",
        "services:\n",
        "    karaf_docker:\n",
        "        image: karaf_docker\n",
        "        container_name: karaf_docker\n",
        "        restart: always\n",
        "        ports:\n",
        "            - \"8040:8040\"\n",
        "            - \"8052:8052\"\n",
        "        stdin_open: true\n",
        "        tty: true\n",
        "        extra_hosts:\n",
        "            - \"host.docker.internal:host-gateway\"\n",
        "    zookeeper:\n",
        "        image: confluentinc/cp-zookeeper:latest\n",
        "        environment:\n",
        "         ZOOKEEPER_CLIENT_PORT: 2181\n",
        "         ZOOKEEPER_SERVER_ID: 1\n",
        "        ports:\n",
        "            - \"2181:2181\"\n",
        "        extra_hosts:\n",
        "            - \"host.docker.internal:host-gateway\"\n",
        "\n",
        "\n",
        "    kafka-1:\n",
        "        image: confluentinc/cp-kafka:latest\n",
        "        ports:\n",
        "            - \"9092:9092\"\n",
        "            - \"29092:29092\"\n",
        "        extra_hosts:\n",
        "            - \"host.docker.internal:host-gateway\"\n",
        "        environment:\n",
        "          KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092\n",
        "          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT\n",
        "          KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL\n",
        "          KAFKA_ZOOKEEPER_CONNECT: \"zookeeper:2181\"\n",
        "          KAFKA_BROKER_ID: 1\n",
        "        depends_on:\n",
        "          - zookeeper\n",
        "\n",
        "    kafka-2:\n",
        "        image: confluentinc/cp-kafka:latest\n",
        "        ports:\n",
        "            - \"9093:9093\"\n",
        "            - \"29093:29093\"\n",
        "        extra_hosts:\n",
        "            - \"host.docker.internal:host-gateway\"\n",
        "        environment:\n",
        "          KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093\n",
        "          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT\n",
        "          KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL\n",
        "          KAFKA_ZOOKEEPER_CONNECT: \"zookeeper:2181\"\n",
        "          KAFKA_BROKER_ID: 2\n",
        "        depends_on:\n",
        "            - zookeeper\n",
        "\n",
        "    kafka-3:\n",
        "        image: confluentinc/cp-kafka:latest\n",
        "        ports:\n",
        "            - \"9094:9094\"\n",
        "            - \"29094:29094\"\n",
        "        extra_hosts:\n",
        "            - \"host.docker.internal:host-gateway\"\n",
        "        environment:\n",
        "          KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:19094,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094,DOCKER://host.docker.internal:29094\n",
        "          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT\n",
        "          KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL\n",
        "          KAFKA_ZOOKEEPER_CONNECT: \"zookeeper:2181\"\n",
        "          KAFKA_BROKER_ID: 3\n",
        "        depends_on:\n",
        "            - zookeeper\n",
        "\n",
        "```\n",
        "\n",
        "Etape 5 : Exécuter les commandes suivantes dans le dossier\n",
        "```\n",
        "docker build -t karaf_docker .\n",
        "docker-compose -f karaf_docker.yml up -d\n",
        "```\n",
        "\n",
        "## Test de l'environnement dévellopé\n",
        "\n",
        "```\n",
        "library(httr)\n",
        "\n",
        "headers = c(\n",
        "  'Content-Type' = 'application/json'\n",
        ")\n",
        "\n",
        "body = '{\n",
        "  \"loi_code\": \"SUCCEED_2024_20_04_2024\",\n",
        "  \"vote_code\": \"2\",\n",
        "  \"depute_code\": \"QUENTIN\"\n",
        "}';\n",
        "\n",
        "res <- VERB(\"POST\", url = \"http://localhost:8052/assemblee_nationale\", body = body, add_headers(headers))\n",
        "headers(res)\n",
        "```\n"
      ],
      "id": "baa70b21"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}